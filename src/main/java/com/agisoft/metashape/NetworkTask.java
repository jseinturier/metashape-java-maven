/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

public class NetworkTask {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public NetworkTask(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(NetworkTask obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_NetworkTask(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static long[] cArrayUnwrap(NetworkTask[] arrayWrapper) {
    long[] cArray = new long[arrayWrapper.length];
    for (int i=0; i<arrayWrapper.length; i++)
      cArray[i] = NetworkTask.getCPtr(arrayWrapper[i]);
    return cArray;
  }

  public static NetworkTask[] cArrayWrap(long[] cArray, boolean cMemoryOwn) {
    NetworkTask[] arrayWrapper = new NetworkTask[cArray.length];
    for (int i=0; i<cArray.length; i++)
      arrayWrapper[i] = new NetworkTask(cArray[i], cMemoryOwn);
    return arrayWrapper;
  }

  public NetworkTask() {
    this(MetashapeJNI.new_NetworkTask__SWIG_0(), true);
  }

  public NetworkTask(NetworkTask task) {
    this(MetashapeJNI.new_NetworkTask__SWIG_1(NetworkTask.getCPtr(task), task), true);
  }

  /**
   *  Task name.
   */
  public void setName(String name) {
    MetashapeJNI.NetworkTask_setName(swigCPtr, this, name);
  }

  /**
   *  Task name.
   */
  public String getName() {
    return MetashapeJNI.NetworkTask_getName(swigCPtr, this);
  }

  /**
   *  List of supported parameter names.
   */
  public String[] getParameterNames() { return MetashapeJNI.NetworkTask_getParameterNames(swigCPtr, this); }

  /**
   * Set parameter value.
   */
  public void setParameter(String name, Variant value) {
    MetashapeJNI.NetworkTask_setParameter(swigCPtr, this, name, value == null ? 0 : Variant.getCPtr(value), value);
  }

  /**
   * Get parameter value.
   */
  public Variant getParameter(String name) {
    long ptr = MetashapeJNI.NetworkTask_getParameter(swigCPtr, this, name);
    if (ptr == 0)
        return null;
    return new Variant(ptr, true);
  }

  /**
   *  List of chunk keys to be processed.
   */
  public void setChunks(int[] chunks) {
    MetashapeJNI.NetworkTask_setChunks(swigCPtr, this, chunks);
  }

  /**
   *  List of chunk keys to be processed.
   */
  public int[] getChunks() { return MetashapeJNI.NetworkTask_getChunks(swigCPtr, this); }

  /**
   * Get list of frames to be processed for a chunk.<br>
   * @param chunk Chunk key.<br>
   * @return List of frame keys.
   */
  public int[] getFrames(int chunk) { return MetashapeJNI.NetworkTask_getFrames(swigCPtr, this, chunk); }

  /**
   * Set list of frames to be processed for a chunk.<br>
   * @param chunk Chunk key.<br>
   * @param frames List of frame keys.
   */
  public void setFrames(int chunk, int[] frames) {
    MetashapeJNI.NetworkTask_setFrames(swigCPtr, this, chunk, frames);
  }

  /**
   *  GPU supported flag.
   */
  public void setGPUSupported(boolean enable) {
    MetashapeJNI.NetworkTask_setGPUSupported(swigCPtr, this, enable);
  }

  /**
   *  GPU supported flag.
   */
  public boolean isGPUSupported() {
    return MetashapeJNI.NetworkTask_isGPUSupported(swigCPtr, this);
  }

}
