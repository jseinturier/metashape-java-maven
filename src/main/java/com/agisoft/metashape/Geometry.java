/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

/**
 * Geometry definition.
 */
public class Geometry {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public Geometry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Geometry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_Geometry(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static long[] cArrayUnwrap(Geometry[] arrayWrapper) {
    long[] cArray = new long[arrayWrapper.length];
    for (int i=0; i<arrayWrapper.length; i++)
      cArray[i] = Geometry.getCPtr(arrayWrapper[i]);
    return cArray;
  }

  public static Geometry[] cArrayWrap(long[] cArray, boolean cMemoryOwn) {
    Geometry[] arrayWrapper = new Geometry[cArray.length];
    for (int i=0; i<cArray.length; i++)
      arrayWrapper[i] = new Geometry(cArray[i], cMemoryOwn);
    return arrayWrapper;
  }

  public Geometry() {
    this(MetashapeJNI.new_Geometry__SWIG_0(), true);
  }

  public Geometry(Geometry geometry) {
    this(MetashapeJNI.new_Geometry__SWIG_1(Geometry.getCPtr(geometry), geometry), true);
  }

  public void setType(Geometry.Type type) {
    MetashapeJNI.Geometry_setType(swigCPtr, this, type.ordinal());
  }

  public Geometry.Type getType() {
    return Geometry.Type.class.getEnumConstants()[MetashapeJNI.Geometry_getType(swigCPtr, this)];
  }

  public void setVertices(Vector3d[] vertices) {
    MetashapeJNI.Geometry_setVertices(swigCPtr, this, Vector3d.cArrayUnwrap(vertices));
  }

  public Vector3d[] getVertices() { return Vector3d.cArrayWrap(MetashapeJNI.Geometry_getVertices(swigCPtr, this), true); }

  public void setVertices2D(Vector2d[] vertices) {
    MetashapeJNI.Geometry_setVertices2D(swigCPtr, this, Vector2d.cArrayUnwrap(vertices));
  }

  public Vector2d[] getVertices2D() { return Vector2d.cArrayWrap(MetashapeJNI.Geometry_getVertices2D(swigCPtr, this), true); }

  public void setGeometries(Geometry[] geometries) {
    MetashapeJNI.Geometry_setGeometries(swigCPtr, this, Geometry.cArrayUnwrap(geometries));
  }

  public Geometry[] getGeometries() { return Geometry.cArrayWrap(MetashapeJNI.Geometry_getGeometries(swigCPtr, this), true); }

  public void set3D(boolean state) {
    MetashapeJNI.Geometry_set3D(swigCPtr, this, state);
  }

  public boolean is3D() {
    return MetashapeJNI.Geometry_is3D(swigCPtr, this);
  }

  public static Geometry makePoint(Vector3d point, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makePoint__SWIG_0(Vector3d.getCPtr(point), point, is_3d), true);
  }

  public static Geometry makePoint(Vector3d point) {
    return new Geometry(MetashapeJNI.Geometry_makePoint__SWIG_1(Vector3d.getCPtr(point), point), true);
  }

  public static Geometry makeLineString(Vector3d[] vertices, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString__SWIG_0(Vector3d.cArrayUnwrap(vertices), is_3d), true);
  }

  public static Geometry makeLineString(Vector3d[] vertices) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString__SWIG_1(Vector3d.cArrayUnwrap(vertices)), true);
  }

  public static Geometry makePolygon(Vector3d[] exterior_ring, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon__SWIG_0(Vector3d.cArrayUnwrap(exterior_ring), is_3d), true);
  }

  public static Geometry makePolygon(Vector3d[] exterior_ring) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon__SWIG_1(Vector3d.cArrayUnwrap(exterior_ring)), true);
  }

  public static Geometry makePoint(Vector2d point) {
    return new Geometry(MetashapeJNI.Geometry_makePoint__SWIG_2(Vector2d.getCPtr(point), point), true);
  }

  public static Geometry makeLineString(Vector2d[] vertices) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString__SWIG_2(Vector2d.cArrayUnwrap(vertices)), true);
  }

  public static Geometry makePolygon(Vector2d[] exterior_ring) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon__SWIG_2(Vector2d.cArrayUnwrap(exterior_ring)), true);
  }

  public static Geometry makeMultiPoint(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiPoint(Geometry.cArrayUnwrap(collection)), true);
  }

  public static Geometry makeMultiLineString(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiLineString(Geometry.cArrayUnwrap(collection)), true);
  }

  public static Geometry makeMultiPolygon(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiPolygon(Geometry.cArrayUnwrap(collection)), true);
  }

  public static Geometry makeGeometryCollection(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeGeometryCollection(Geometry.cArrayUnwrap(collection)), true);
  }

  public enum Type {
    Empty,
    Point,
    LineString,
    Polygon,
    MultiPoint,
    MultiLineString,
    MultiPolygon,
    GeometryCollection;
  }

}
