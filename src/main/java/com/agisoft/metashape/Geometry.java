/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

import java.lang.AutoCloseable;
import java.util.Optional;
import java.util.Map;

/**
 * Geometry definition.
 */
public class Geometry implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Geometry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Geometry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_Geometry(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
    delete();
  }

  public Geometry() {
    this(MetashapeJNI.new_Geometry__SWIG_0(), true);
  }

  public Geometry(Geometry geometry) {
    this(MetashapeJNI.new_Geometry__SWIG_1(Geometry.getCPtr(geometry), geometry), true);
  }

  public void setType(Geometry.Type type) {
    MetashapeJNI.Geometry_setType(swigCPtr, this, type.ordinal());
  }

  public Geometry.Type getType() {
    return Geometry.Type.class.getEnumConstants()[MetashapeJNI.Geometry_getType(swigCPtr, this)];
  }

  public void setVertices(Vector[] vertices) {
    MetashapeJNI.Geometry_setVertices(swigCPtr, this, vertices);
  }

  public Vector[] getVertices() { return MetashapeJNI.Geometry_getVertices(swigCPtr, this); }

  public void setVertices2D(Vector[] vertices) {
    MetashapeJNI.Geometry_setVertices2D(swigCPtr, this, vertices);
  }

  public Vector[] getVertices2D() { return MetashapeJNI.Geometry_getVertices2D(swigCPtr, this); }

  public void setGeometries(Geometry[] geometries) {
    MetashapeJNI.Geometry_setGeometries(swigCPtr, this, SwigHelpers.cArrayUnwrap(geometries, Geometry.class));
  }

  public Geometry[] getGeometries() { return SwigHelpers.cArrayWrap(MetashapeJNI.Geometry_getGeometries(swigCPtr, this), true, Geometry.class); }

  public void set3D(boolean state) {
    MetashapeJNI.Geometry_set3D(swigCPtr, this, state);
  }

  public boolean is3D() {
    return MetashapeJNI.Geometry_is3D(swigCPtr, this);
  }

  public static Geometry makePoint(Vector point, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makePoint__SWIG_0(point, is_3d), true);
  }

  public static Geometry makePoint(Vector point) {
    return new Geometry(MetashapeJNI.Geometry_makePoint__SWIG_1(point), true);
  }

  public static Geometry makeLineString(Vector[] vertices, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString__SWIG_0(vertices, is_3d), true);
  }

  public static Geometry makeLineString(Vector[] vertices) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString__SWIG_1(vertices), true);
  }

  public static Geometry makePolygon(Vector[] exterior_ring, boolean is_3d) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon__SWIG_0(exterior_ring, is_3d), true);
  }

  public static Geometry makePolygon(Vector[] exterior_ring) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon__SWIG_1(exterior_ring), true);
  }

  public static Geometry makePoint2D(Vector point) {
    return new Geometry(MetashapeJNI.Geometry_makePoint2D(point), true);
  }

  public static Geometry makeLineString2D(Vector[] vertices) {
    return new Geometry(MetashapeJNI.Geometry_makeLineString2D(vertices), true);
  }

  public static Geometry makePolygon2D(Vector[] exterior_ring) {
    return new Geometry(MetashapeJNI.Geometry_makePolygon2D(exterior_ring), true);
  }

  public static Geometry makeMultiPoint(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiPoint(SwigHelpers.cArrayUnwrap(collection, Geometry.class)), true);
  }

  public static Geometry makeMultiLineString(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiLineString(SwigHelpers.cArrayUnwrap(collection, Geometry.class)), true);
  }

  public static Geometry makeMultiPolygon(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeMultiPolygon(SwigHelpers.cArrayUnwrap(collection, Geometry.class)), true);
  }

  public static Geometry makeGeometryCollection(Geometry[] collection) {
    return new Geometry(MetashapeJNI.Geometry_makeGeometryCollection(SwigHelpers.cArrayUnwrap(collection, Geometry.class)), true);
  }

  public enum Type {
    Empty,
    Point,
    LineString,
    Polygon,
    MultiPoint,
    MultiLineString,
    MultiPolygon,
    GeometryCollection;
  }

}
