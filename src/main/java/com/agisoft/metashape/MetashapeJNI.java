/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

public class MetashapeJNI {
  public final static native String getVersion();
  public final static native long getGpuMask();
  public final static native void setGpuMask(long jarg1);
  public final static native boolean isCpuEnabled();
  public final static native void setCpuEnabled(boolean jarg1);
  public final static native void releaseFreeMemory();
  public final static native long new_Vector2d__SWIG_0();
  public final static native long new_Vector2d__SWIG_1(double jarg1, double jarg2);
  public final static native long new_Vector2d__SWIG_2(double[] jarg1);
  public final static native double Vector2d_getX(long jarg1, Vector2d jarg1_);
  public final static native double Vector2d_getY(long jarg1, Vector2d jarg1_);
  public final static native void Vector2d_setX(long jarg1, Vector2d jarg1_, double jarg2);
  public final static native void Vector2d_setY(long jarg1, Vector2d jarg1_, double jarg2);
  public final static native double[] Vector2d_getData(long jarg1, Vector2d jarg1_);
  public final static native double Vector2d_dot(long jarg1, Vector2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Vector2d_mul(long jarg1, Vector2d jarg1_, double jarg2);
  public final static native long Vector2d_add(long jarg1, Vector2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Vector2d_sub(long jarg1, Vector2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native double Vector2d_norm(long jarg1, Vector2d jarg1_);
  public final static native long Vector2d_normalized(long jarg1, Vector2d jarg1_);
  public final static native void delete_Vector2d(long jarg1);
  public final static native long new_Vector3d__SWIG_0();
  public final static native long new_Vector3d__SWIG_1(double jarg1, double jarg2, double jarg3);
  public final static native long new_Vector3d__SWIG_2(double[] jarg1);
  public final static native double Vector3d_getX(long jarg1, Vector3d jarg1_);
  public final static native double Vector3d_getY(long jarg1, Vector3d jarg1_);
  public final static native double Vector3d_getZ(long jarg1, Vector3d jarg1_);
  public final static native void Vector3d_setX(long jarg1, Vector3d jarg1_, double jarg2);
  public final static native void Vector3d_setY(long jarg1, Vector3d jarg1_, double jarg2);
  public final static native void Vector3d_setZ(long jarg1, Vector3d jarg1_, double jarg2);
  public final static native double[] Vector3d_getData(long jarg1, Vector3d jarg1_);
  public final static native double Vector3d_dot(long jarg1, Vector3d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Vector3d_mul(long jarg1, Vector3d jarg1_, double jarg2);
  public final static native long Vector3d_add(long jarg1, Vector3d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Vector3d_sub(long jarg1, Vector3d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Vector3d_cross(long jarg1, Vector3d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native double Vector3d_norm(long jarg1, Vector3d jarg1_);
  public final static native long Vector3d_normalized(long jarg1, Vector3d jarg1_);
  public final static native void delete_Vector3d(long jarg1);
  public final static native long new_Vector3uc__SWIG_0();
  public final static native long new_Vector3uc__SWIG_1(short jarg1, short jarg2, short jarg3);
  public final static native long new_Vector3uc__SWIG_2(short[] jarg1);
  public final static native short Vector3uc_getX(long jarg1, Vector3uc jarg1_);
  public final static native short Vector3uc_getY(long jarg1, Vector3uc jarg1_);
  public final static native short Vector3uc_getZ(long jarg1, Vector3uc jarg1_);
  public final static native void Vector3uc_setX(long jarg1, Vector3uc jarg1_, short jarg2);
  public final static native void Vector3uc_setY(long jarg1, Vector3uc jarg1_, short jarg2);
  public final static native void Vector3uc_setZ(long jarg1, Vector3uc jarg1_, short jarg2);
  public final static native short[] Vector3uc_getData(long jarg1, Vector3uc jarg1_);
  public final static native void delete_Vector3uc(long jarg1);
  public final static native long new_BBox2d__SWIG_0();
  public final static native long new_BBox2d__SWIG_1(long jarg1, Vector2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long BBox2d_getMin(long jarg1, BBox2d jarg1_);
  public final static native long BBox2d_getMax(long jarg1, BBox2d jarg1_);
  public final static native void BBox2d_setMin(long jarg1, BBox2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native void BBox2d_setMax(long jarg1, BBox2d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native void delete_BBox2d(long jarg1);
  public final static native long new_Matrix2x3d__SWIG_0();
  public final static native long new_Matrix2x3d__SWIG_1(double[][] jarg1);
  public final static native double Matrix2x3d_get(long jarg1, Matrix2x3d jarg1_, int jarg2, int jarg3);
  public final static native void Matrix2x3d_set(long jarg1, Matrix2x3d jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native double[][] Matrix2x3d_getData(long jarg1, Matrix2x3d jarg1_);
  public final static native long Matrix2x3d_col(long jarg1, Matrix2x3d jarg1_, int jarg2);
  public final static native long Matrix2x3d_row(long jarg1, Matrix2x3d jarg1_, int jarg2);
  public final static native void delete_Matrix2x3d(long jarg1);
  public final static native long new_Matrix3x3d__SWIG_0();
  public final static native long new_Matrix3x3d__SWIG_1(double[][] jarg1);
  public final static native double Matrix3x3d_get(long jarg1, Matrix3x3d jarg1_, int jarg2, int jarg3);
  public final static native void Matrix3x3d_set(long jarg1, Matrix3x3d jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native double[][] Matrix3x3d_getData(long jarg1, Matrix3x3d jarg1_);
  public final static native long Matrix3x3d_mul__SWIG_0(long jarg1, Matrix3x3d jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Matrix3x3d_mul__SWIG_1(long jarg1, Matrix3x3d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Matrix3x3d_mul__SWIG_2(long jarg1, Matrix3x3d jarg1_, double jarg2);
  public final static native long Matrix3x3d_mulp(long jarg1, Matrix3x3d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Matrix3x3d_mulv(long jarg1, Matrix3x3d jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Matrix3x3d_add(long jarg1, Matrix3x3d jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Matrix3x3d_sub(long jarg1, Matrix3x3d jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Matrix3x3d_inv(long jarg1, Matrix3x3d jarg1_);
  public final static native long Matrix3x3d_t(long jarg1, Matrix3x3d jarg1_);
  public final static native double Matrix3x3d_det(long jarg1, Matrix3x3d jarg1_);
  public final static native long Matrix3x3d_col(long jarg1, Matrix3x3d jarg1_, int jarg2);
  public final static native long Matrix3x3d_row(long jarg1, Matrix3x3d jarg1_, int jarg2);
  public final static native void delete_Matrix3x3d(long jarg1);
  public final static native long new_Matrix4x4d__SWIG_0();
  public final static native long new_Matrix4x4d__SWIG_1(double[][] jarg1);
  public final static native double Matrix4x4d_get(long jarg1, Matrix4x4d jarg1_, int jarg2, int jarg3);
  public final static native void Matrix4x4d_set(long jarg1, Matrix4x4d jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native double[][] Matrix4x4d_getData(long jarg1, Matrix4x4d jarg1_);
  public final static native long Matrix4x4d_mul__SWIG_0(long jarg1, Matrix4x4d jarg1_, long jarg2, Matrix4x4d jarg2_);
  public final static native long Matrix4x4d_mul__SWIG_1(long jarg1, Matrix4x4d jarg1_, double jarg2);
  public final static native long Matrix4x4d_mulp(long jarg1, Matrix4x4d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Matrix4x4d_mulv(long jarg1, Matrix4x4d jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Matrix4x4d_inv(long jarg1, Matrix4x4d jarg1_);
  public final static native long Matrix4x4d_t(long jarg1, Matrix4x4d jarg1_);
  public final static native double Matrix4x4d_det(long jarg1, Matrix4x4d jarg1_);
  public final static native long Matrix4x4d_rotation(long jarg1, Matrix4x4d jarg1_);
  public final static native long Matrix4x4d_translation(long jarg1, Matrix4x4d jarg1_);
  public final static native double Matrix4x4d_scale(long jarg1, Matrix4x4d jarg1_);
  public final static native void delete_Matrix4x4d(long jarg1);
  public final static native long new_ImageCompression();
  public final static native void ImageCompression_tiffBig_set(long jarg1, ImageCompression jarg1_, boolean jarg2);
  public final static native boolean ImageCompression_tiffBig_get(long jarg1, ImageCompression jarg1_);
  public final static native void ImageCompression_tiffTiled_set(long jarg1, ImageCompression jarg1_, boolean jarg2);
  public final static native boolean ImageCompression_tiffTiled_get(long jarg1, ImageCompression jarg1_);
  public final static native void ImageCompression_tiffOverviews_set(long jarg1, ImageCompression jarg1_, boolean jarg2);
  public final static native boolean ImageCompression_tiffOverviews_get(long jarg1, ImageCompression jarg1_);
  public final static native void ImageCompression_tiffCompression_set(long jarg1, ImageCompression jarg1_, int jarg2);
  public final static native int ImageCompression_tiffCompression_get(long jarg1, ImageCompression jarg1_);
  public final static native void ImageCompression_jpegQuality_set(long jarg1, ImageCompression jarg1_, int jarg2);
  public final static native int ImageCompression_jpegQuality_get(long jarg1, ImageCompression jarg1_);
  public final static native void delete_ImageCompression(long jarg1);
  public final static native void Viewpoint_cx_set(long jarg1, Viewpoint jarg1_, int jarg2);
  public final static native int Viewpoint_cx_get(long jarg1, Viewpoint jarg1_);
  public final static native void Viewpoint_cy_set(long jarg1, Viewpoint jarg1_, int jarg2);
  public final static native int Viewpoint_cy_get(long jarg1, Viewpoint jarg1_);
  public final static native void Viewpoint_O_set(long jarg1, Viewpoint jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Viewpoint_O_get(long jarg1, Viewpoint jarg1_);
  public final static native void Viewpoint_R_set(long jarg1, Viewpoint jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Viewpoint_R_get(long jarg1, Viewpoint jarg1_);
  public final static native void Viewpoint_scale_set(long jarg1, Viewpoint jarg1_, double jarg2);
  public final static native double Viewpoint_scale_get(long jarg1, Viewpoint jarg1_);
  public final static native void Viewpoint_angle_set(long jarg1, Viewpoint jarg1_, double jarg2);
  public final static native double Viewpoint_angle_get(long jarg1, Viewpoint jarg1_);
  public final static native long new_Viewpoint();
  public final static native void delete_Viewpoint(long jarg1);
  public final static native void Property_label_set(long jarg1, Property jarg1_, String jarg2);
  public final static native String Property_label_get(long jarg1, Property jarg1_);
  public final static native void Property_value_set(long jarg1, Property jarg1_, String jarg2);
  public final static native String Property_value_get(long jarg1, Property jarg1_);
  public final static native void Property_children_set(long jarg1, Property jarg1_, long[] jarg2);
  public final static native long[] Property_children_get(long jarg1, Property jarg1_);
  public final static native long new_Property();
  public final static native void delete_Property(long jarg1);
  public final static native long new_Pair__SWIG_0();
  public final static native long new_Pair__SWIG_1(int jarg1, int jarg2);
  public final static native void Pair_first_set(long jarg1, Pair jarg1_, int jarg2);
  public final static native int Pair_first_get(long jarg1, Pair jarg1_);
  public final static native void Pair_second_set(long jarg1, Pair jarg1_, int jarg2);
  public final static native int Pair_second_get(long jarg1, Pair jarg1_);
  public final static native void delete_Pair(long jarg1);
  public final static native boolean License_isValid();
  public final static native void License_activate(String jarg1);
  public final static native String License_activateOffline(String jarg1);
  public final static native void License_deactivate();
  public final static native String License_deactivateOffline();
  public final static native long new_License();
  public final static native void delete_License(long jarg1);
  public final static native long new_Variant__SWIG_0();
  public final static native long new_Variant__SWIG_1(long jarg1, Variant jarg1_);
  public final static native long new_Variant__SWIG_2(byte jarg1);
  public final static native long new_Variant__SWIG_3(short jarg1);
  public final static native long new_Variant__SWIG_4(int jarg1);
  public final static native long new_Variant__SWIG_5(long jarg1);
  public final static native long new_Variant__SWIG_6(float jarg1);
  public final static native long new_Variant__SWIG_7(double jarg1);
  public final static native long new_Variant__SWIG_8(String jarg1);
  public final static native long new_Variant__SWIG_9(byte[] jarg1);
  public final static native long new_Variant__SWIG_10(short[] jarg1);
  public final static native long new_Variant__SWIG_11(int[] jarg1);
  public final static native long new_Variant__SWIG_12(long[] jarg1);
  public final static native long new_Variant__SWIG_13(float[] jarg1);
  public final static native long new_Variant__SWIG_14(double[] jarg1);
  public final static native long new_Variant__SWIG_15(String[] jarg1);
  public final static native void delete_Variant(long jarg1);
  public final static native long new_Image__SWIG_0();
  public final static native long new_Image__SWIG_1(long jarg1, Image jarg1_);
  public final static native long new_Image__SWIG_2(long jarg1, long jarg2, String jarg3, int jarg4);
  public final static native boolean Image_isNull(long jarg1, Image jarg1_);
  public final static native long Image_copy(long jarg1, Image jarg1_);
  public final static native long Image_getWidth(long jarg1, Image jarg1_);
  public final static native long Image_getHeight(long jarg1, Image jarg1_);
  public final static native long Image_getChannelCount(long jarg1, Image jarg1_);
  public final static native String Image_getChannels(long jarg1, Image jarg1_);
  public final static native int Image_getDataType(long jarg1, Image jarg1_);
  public final static native void Image_resize(long jarg1, Image jarg1_, long jarg2, long jarg3);
  public final static native long Image_convert(long jarg1, Image jarg1_, String jarg2, int jarg3);
  public final static native boolean Image_save(long jarg1, Image jarg1_, String jarg2);
  public final static native boolean Image_load(long jarg1, Image jarg1_, String jarg2, int jarg3, int jarg4, String jarg5);
  public final static native void delete_Image(long jarg1);
  public final static native long new_MetaData__SWIG_0();
  public final static native long new_MetaData__SWIG_1(long jarg1, MetaData jarg1_);
  public final static native long MetaData_copy(long jarg1, MetaData jarg1_);
  public final static native boolean MetaData_contains(long jarg1, MetaData jarg1_, String jarg2);
  public final static native String MetaData_get(long jarg1, MetaData jarg1_, String jarg2);
  public final static native void MetaData_set(long jarg1, MetaData jarg1_, String jarg2, String jarg3);
  public final static native String[] MetaData_getKeys(long jarg1, MetaData jarg1_);
  public final static native void delete_MetaData(long jarg1);
  public final static native long new_CoordinateSystem__SWIG_0();
  public final static native long new_CoordinateSystem__SWIG_1(long jarg1, CoordinateSystem jarg1_);
  public final static native String CoordinateSystem_getAuthority(long jarg1, CoordinateSystem jarg1_);
  public final static native String CoordinateSystem_getWkt(long jarg1, CoordinateSystem jarg1_);
  public final static native String CoordinateSystem_getProj4(long jarg1, CoordinateSystem jarg1_);
  public final static native boolean CoordinateSystem_init(long jarg1, CoordinateSystem jarg1_, String jarg2);
  public final static native long CoordinateSystem_project(long jarg1, CoordinateSystem jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long CoordinateSystem_unproject(long jarg1, CoordinateSystem jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long CoordinateSystem_localframe(long jarg1, CoordinateSystem jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long CoordinateSystem_transform(long jarg1, Vector3d jarg1_, long jarg2, CoordinateSystem jarg2_, long jarg3, CoordinateSystem jarg3_);
  public final static native boolean CoordinateSystem_addGeoid(String jarg1);
  public final static native void delete_CoordinateSystem(long jarg1);
  public final static native long new_OrthoProjection__SWIG_0();
  public final static native long new_OrthoProjection__SWIG_1(long jarg1, OrthoProjection jarg1_);
  public final static native String OrthoProjection_getAuthority(long jarg1, OrthoProjection jarg1_);
  public final static native String OrthoProjection_getWkt(long jarg1, OrthoProjection jarg1_);
  public final static native String OrthoProjection_getProj4(long jarg1, OrthoProjection jarg1_);
  public final static native boolean OrthoProjection_init(long jarg1, OrthoProjection jarg1_, String jarg2);
  public final static native long OrthoProjection_project(long jarg1, OrthoProjection jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long OrthoProjection_unproject(long jarg1, OrthoProjection jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long OrthoProjection_localframe(long jarg1, OrthoProjection jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long OrthoProjection_transform(long jarg1, Vector3d jarg1_, long jarg2, OrthoProjection jarg2_, long jarg3, OrthoProjection jarg3_);
  public final static native void delete_OrthoProjection(long jarg1);
  public final static native long new_Transform__SWIG_0();
  public final static native long new_Transform__SWIG_1(long jarg1, Transform jarg1_);
  public final static native void Transform_setRotation(long jarg1, Transform jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Transform_getRotation(long jarg1, Transform jarg1_);
  public final static native void Transform_setTranslation(long jarg1, Transform jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Transform_getTranslation(long jarg1, Transform jarg1_);
  public final static native void Transform_setScale(long jarg1, Transform jarg1_, Double jarg2);
  public final static native Double Transform_getScale(long jarg1, Transform jarg1_);
  public final static native void Transform_setMatrix(long jarg1, Transform jarg1_, long jarg2, Matrix4x4d jarg2_);
  public final static native long Transform_getMatrix(long jarg1, Transform jarg1_);
  public final static native boolean Transform_hasMatrix(long jarg1, Transform jarg1_);
  public final static native void Transform_reset(long jarg1, Transform jarg1_);
  public final static native long Transform_transformPoint(long jarg1, Transform jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Transform_transformVector(long jarg1, Transform jarg1_, long jarg2, Vector3d jarg2_);
  public final static native void delete_Transform(long jarg1);
  public final static native long new_Region__SWIG_0();
  public final static native long new_Region__SWIG_1(long jarg1, Region jarg1_);
  public final static native void Region_setRotation(long jarg1, Region jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Region_getRotation(long jarg1, Region jarg1_);
  public final static native void Region_setCenter(long jarg1, Region jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Region_getCenter(long jarg1, Region jarg1_);
  public final static native void Region_setSize(long jarg1, Region jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Region_getSize(long jarg1, Region jarg1_);
  public final static native void delete_Region(long jarg1);
  public final static native long new_Palette__SWIG_0();
  public final static native long new_Palette__SWIG_1(long jarg1, Palette jarg1_);
  public final static native void Palette_init(long jarg1, Palette jarg1_, int jarg2);
  public final static native boolean Palette_load(long jarg1, Palette jarg1_, String jarg2);
  public final static native boolean Palette_save(long jarg1, Palette jarg1_, String jarg2);
  public final static native void Palette_resize(long jarg1, Palette jarg1_, long jarg2);
  public final static native long Palette_getSize(long jarg1, Palette jarg1_);
  public final static native void Palette_setValue(long jarg1, Palette jarg1_, long jarg2, float jarg3);
  public final static native float Palette_getValue(long jarg1, Palette jarg1_, long jarg2);
  public final static native void Palette_setColor(long jarg1, Palette jarg1_, long jarg2, long jarg3, Vector3uc jarg3_);
  public final static native long Palette_getColor(long jarg1, Palette jarg1_, long jarg2);
  public final static native void delete_Palette(long jarg1);
  public final static native long new_Antenna(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setFixed(long jarg1, Antenna jarg1_, boolean jarg2);
  public final static native boolean Antenna_isFixed(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setLocation(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getLocation(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setRotation(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getRotation(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setLocationReference(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getLocationReference(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setRotationReference(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getRotationReference(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setLocationAccuracy(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getLocationAccuracy(long jarg1, Antenna jarg1_);
  public final static native void Antenna_setRotationAccuracy(long jarg1, Antenna jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Antenna_getRotationAccuracy(long jarg1, Antenna jarg1_);
  public final static native void delete_Antenna(long jarg1);
  public final static native long new_Shutter__SWIG_0();
  public final static native long new_Shutter__SWIG_1(long jarg1, Shutter jarg1_);
  public final static native void Shutter_setTranslation(long jarg1, Shutter jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Shutter_getTranslation(long jarg1, Shutter jarg1_);
  public final static native void Shutter_setRotation(long jarg1, Shutter jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Shutter_getRotation(long jarg1, Shutter jarg1_);
  public final static native void delete_Shutter(long jarg1);
  public final static native long new_Vignetting__SWIG_0();
  public final static native long new_Vignetting__SWIG_1(long jarg1, Vignetting jarg1_);
  public final static native void Vignetting_setCoeff(long jarg1, Vignetting jarg1_, int jarg2, int jarg3, double jarg4);
  public final static native double Vignetting_getCoeff(long jarg1, Vignetting jarg1_, int jarg2, int jarg3);
  public final static native void delete_Vignetting(long jarg1);
  public final static native long new_RPCModel__SWIG_0();
  public final static native long new_RPCModel__SWIG_1(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setImageOffset(long jarg1, RPCModel jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long RPCModel_getImageOffset(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setImageScale(long jarg1, RPCModel jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long RPCModel_getImageScale(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setObjectOffset(long jarg1, RPCModel jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long RPCModel_getObjectOffset(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setObjectScale(long jarg1, RPCModel jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long RPCModel_getObjectScale(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setLineNumCoeff(long jarg1, RPCModel jarg1_, double[] jarg2);
  public final static native double[] RPCModel_getLineNumCoeff(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setLineDenCoeff(long jarg1, RPCModel jarg1_, double[] jarg2);
  public final static native double[] RPCModel_getLineDenCoeff(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setSampleNumCoeff(long jarg1, RPCModel jarg1_, double[] jarg2);
  public final static native double[] RPCModel_getSampleNumCoeff(long jarg1, RPCModel jarg1_);
  public final static native void RPCModel_setSampleDenCoeff(long jarg1, RPCModel jarg1_, double[] jarg2);
  public final static native double[] RPCModel_getSampleDenCoeff(long jarg1, RPCModel jarg1_);
  public final static native void delete_RPCModel(long jarg1);
  public final static native long new_Calibration__SWIG_0();
  public final static native long new_Calibration__SWIG_1(long jarg1, Calibration jarg1_);
  public final static native void delete_Calibration(long jarg1);
  public final static native int Calibration_getType(long jarg1, Calibration jarg1_);
  public final static native long Calibration_getWidth(long jarg1, Calibration jarg1_);
  public final static native long Calibration_getHeight(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setType(long jarg1, Calibration jarg1_, int jarg2);
  public final static native void Calibration_setWidth(long jarg1, Calibration jarg1_, long jarg2);
  public final static native void Calibration_setHeight(long jarg1, Calibration jarg1_, long jarg2);
  public final static native void Calibration_setF(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getF(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setCx(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getCx(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setCy(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getCy(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setB1(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getB1(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setB2(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getB2(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setK1(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getK1(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setK2(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getK2(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setK3(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getK3(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setK4(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getK4(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setP1(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getP1(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setP2(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getP2(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setP3(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getP3(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setP4(long jarg1, Calibration jarg1_, double jarg2);
  public final static native double Calibration_getP4(long jarg1, Calibration jarg1_);
  public final static native void Calibration_setRPCModel(long jarg1, Calibration jarg1_, long jarg2, RPCModel jarg2_);
  public final static native long Calibration_getRPCModel(long jarg1, Calibration jarg1_);
  public final static native void Calibration_save(long jarg1, Calibration jarg1_, String jarg2, int jarg3, String jarg4, long jarg5, Vector2d jarg5_, double jarg6, double jarg7, double jarg8);
  public final static native void Calibration_load(long jarg1, Calibration jarg1_, String jarg2, int jarg3);
  public final static native long Calibration_project(long jarg1, Calibration jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Calibration_unproject(long jarg1, Calibration jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Calibration_getError(long jarg1, Calibration jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector2d jarg3_);
  public final static native long new_RasterTransform__SWIG_0();
  public final static native long new_RasterTransform__SWIG_1(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setEnabled(long jarg1, RasterTransform jarg1_, boolean jarg2);
  public final static native boolean RasterTransform_isEnabled(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setFromulas(long jarg1, RasterTransform jarg1_, String[] jarg2);
  public final static native String[] RasterTransform_getFormulas(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setMinValue(long jarg1, RasterTransform jarg1_, double jarg2);
  public final static native double RasterTransform_getMinValue(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setMaxValue(long jarg1, RasterTransform jarg1_, double jarg2);
  public final static native double RasterTransform_getMaxValue(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setInterpolated(long jarg1, RasterTransform jarg1_, boolean jarg2);
  public final static native boolean RasterTransform_isInterpolated(long jarg1, RasterTransform jarg1_);
  public final static native void RasterTransform_setPalette(long jarg1, RasterTransform jarg1_, long jarg2, Palette jarg2_);
  public final static native long RasterTransform_getPalette(long jarg1, RasterTransform jarg1_);
  public final static native void delete_RasterTransform(long jarg1);
  public final static native long new_Photo__SWIG_0();
  public final static native long new_Photo__SWIG_1(long jarg1, Photo jarg1_);
  public final static native void Photo_setPath(long jarg1, Photo jarg1_, String jarg2);
  public final static native String Photo_getPath(long jarg1, Photo jarg1_);
  public final static native void Photo_setLayer(long jarg1, Photo jarg1_, long jarg2);
  public final static native long Photo_getLayer(long jarg1, Photo jarg1_);
  public final static native void Photo_setMeta(long jarg1, Photo jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Photo_getMeta(long jarg1, Photo jarg1_);
  public final static native long Photo_createThumbnail(long jarg1, Photo jarg1_, int jarg2, int jarg3);
  public final static native void delete_Photo(long jarg1);
  public final static native long new_Sensor(long jarg1, Sensor jarg1_);
  public final static native long new_Sensor_Reference(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setLocationEnabled(long jarg1, Sensor.Reference jarg1_, boolean jarg2);
  public final static native boolean Sensor_Reference_isLocationEnabled(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setRotationEnabled(long jarg1, Sensor.Reference jarg1_, boolean jarg2);
  public final static native boolean Sensor_Reference_isRotationEnabled(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setLocation(long jarg1, Sensor.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Sensor_Reference_getLocation(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setRotation(long jarg1, Sensor.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Sensor_Reference_getRotation(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setLocationAccuracy(long jarg1, Sensor.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Sensor_Reference_getLocationAccuracy(long jarg1, Sensor.Reference jarg1_);
  public final static native void Sensor_Reference_setRotationAccuracy(long jarg1, Sensor.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Sensor_Reference_getRotationAccuracy(long jarg1, Sensor.Reference jarg1_);
  public final static native void delete_Sensor_Reference(long jarg1);
  public final static native int Sensor_getKey(long jarg1, Sensor jarg1_);
  public final static native long Sensor_getChunk(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setLabel(long jarg1, Sensor jarg1_, String jarg2);
  public final static native String Sensor_getLabel(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setResolution(long jarg1, Sensor jarg1_, long jarg2, long jarg3);
  public final static native long Sensor_getWidth(long jarg1, Sensor jarg1_);
  public final static native long Sensor_getHeight(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setCameraModel(long jarg1, Sensor jarg1_, int jarg2);
  public final static native int Sensor_getCameraModel(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setCalibration(long jarg1, Sensor jarg1_, long jarg2, Calibration jarg2_);
  public final static native long Sensor_getCalibration(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setUserCalib(long jarg1, Sensor jarg1_, long jarg2, Calibration jarg2_);
  public final static native long Sensor_getUserCalib(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setFixed(long jarg1, Sensor jarg1_, boolean jarg2);
  public final static native boolean Sensor_isFixed(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setPixelSize(long jarg1, Sensor jarg1_, double jarg2, double jarg3);
  public final static native double Sensor_getPixelWidth(long jarg1, Sensor jarg1_);
  public final static native double Sensor_getPixelHeight(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setFocalLength(long jarg1, Sensor jarg1_, double jarg2);
  public final static native double Sensor_getFocalLength(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setReference(long jarg1, Sensor jarg1_, long jarg2, Sensor.Reference jarg2_);
  public final static native long Sensor_getReference(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setAntenna(long jarg1, Sensor jarg1_, long jarg2, Antenna jarg2_);
  public final static native long Sensor_getAntenna(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setVignetting(long jarg1, Sensor jarg1_, long[] jarg2);
  public final static native long[] Sensor_getVignetting(long jarg1, Sensor jarg1_);
  public final static native void Sensor_setMeta(long jarg1, Sensor jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Sensor_getMeta(long jarg1, Sensor jarg1_);
  public final static native void delete_Sensor(long jarg1);
  public final static native long new_CameraGroup(long jarg1, CameraGroup jarg1_);
  public final static native int CameraGroup_getKey(long jarg1, CameraGroup jarg1_);
  public final static native long CameraGroup_getChunk(long jarg1, CameraGroup jarg1_);
  public final static native void CameraGroup_setGroupType(long jarg1, CameraGroup jarg1_, int jarg2);
  public final static native int CameraGroup_getGroupType(long jarg1, CameraGroup jarg1_);
  public final static native void CameraGroup_setLabel(long jarg1, CameraGroup jarg1_, String jarg2);
  public final static native String CameraGroup_getLabel(long jarg1, CameraGroup jarg1_);
  public final static native void CameraGroup_setSelected(long jarg1, CameraGroup jarg1_, boolean jarg2);
  public final static native boolean CameraGroup_isSelected(long jarg1, CameraGroup jarg1_);
  public final static native void delete_CameraGroup(long jarg1);
  public final static native long new_MarkerGroup(long jarg1, MarkerGroup jarg1_);
  public final static native int MarkerGroup_getKey(long jarg1, MarkerGroup jarg1_);
  public final static native long MarkerGroup_getChunk(long jarg1, MarkerGroup jarg1_);
  public final static native void MarkerGroup_setLabel(long jarg1, MarkerGroup jarg1_, String jarg2);
  public final static native String MarkerGroup_getLabel(long jarg1, MarkerGroup jarg1_);
  public final static native void MarkerGroup_setSelected(long jarg1, MarkerGroup jarg1_, boolean jarg2);
  public final static native boolean MarkerGroup_isSelected(long jarg1, MarkerGroup jarg1_);
  public final static native void delete_MarkerGroup(long jarg1);
  public final static native long new_ScalebarGroup(long jarg1, ScalebarGroup jarg1_);
  public final static native int ScalebarGroup_getKey(long jarg1, ScalebarGroup jarg1_);
  public final static native long ScalebarGroup_getChunk(long jarg1, ScalebarGroup jarg1_);
  public final static native void ScalebarGroup_setLabel(long jarg1, ScalebarGroup jarg1_, String jarg2);
  public final static native String ScalebarGroup_getLabel(long jarg1, ScalebarGroup jarg1_);
  public final static native void ScalebarGroup_setSelected(long jarg1, ScalebarGroup jarg1_, boolean jarg2);
  public final static native boolean ScalebarGroup_isSelected(long jarg1, ScalebarGroup jarg1_);
  public final static native void delete_ScalebarGroup(long jarg1);
  public final static native long new_Camera(long jarg1, Camera jarg1_);
  public final static native long new_Camera_Reference(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setLocationEnabled(long jarg1, Camera.Reference jarg1_, boolean jarg2);
  public final static native boolean Camera_Reference_isLocationEnabled(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setRotationEnabled(long jarg1, Camera.Reference jarg1_, boolean jarg2);
  public final static native boolean Camera_Reference_isRotationEnabled(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setLocation(long jarg1, Camera.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_Reference_getLocation(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setRotation(long jarg1, Camera.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_Reference_getRotation(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setLocationAccuracy(long jarg1, Camera.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_Reference_getLocationAccuracy(long jarg1, Camera.Reference jarg1_);
  public final static native void Camera_Reference_setRotationAccuracy(long jarg1, Camera.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_Reference_getRotationAccuracy(long jarg1, Camera.Reference jarg1_);
  public final static native void delete_Camera_Reference(long jarg1);
  public final static native int Camera_getKey(long jarg1, Camera jarg1_);
  public final static native long Camera_getChunk(long jarg1, Camera jarg1_);
  public final static native void Camera_setLabel(long jarg1, Camera jarg1_, String jarg2);
  public final static native String Camera_getLabel(long jarg1, Camera jarg1_);
  public final static native void Camera_setEnabled(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native boolean Camera_isEnabled(long jarg1, Camera jarg1_);
  public final static native void Camera_setSelected(long jarg1, Camera jarg1_, boolean jarg2);
  public final static native boolean Camera_isSelected(long jarg1, Camera jarg1_);
  public final static native void Camera_setOrientation(long jarg1, Camera jarg1_, int jarg2);
  public final static native int Camera_getOrientation(long jarg1, Camera jarg1_);
  public final static native void Camera_setSensor(long jarg1, Camera jarg1_, long jarg2, Sensor jarg2_);
  public final static native long Camera_getSensor(long jarg1, Camera jarg1_);
  public final static native void Camera_setGroup(long jarg1, Camera jarg1_, long jarg2, CameraGroup jarg2_);
  public final static native long Camera_getGroup(long jarg1, Camera jarg1_);
  public final static native void Camera_setPhoto(long jarg1, Camera jarg1_, long jarg2, Photo jarg2_);
  public final static native long Camera_getPhoto(long jarg1, Camera jarg1_);
  public final static native void Camera_setTransform(long jarg1, Camera jarg1_, long jarg2, Matrix4x4d jarg2_);
  public final static native long Camera_getTransform(long jarg1, Camera jarg1_);
  public final static native void Camera_setMask(long jarg1, Camera jarg1_, long jarg2, Image jarg2_);
  public final static native long Camera_getMask(long jarg1, Camera jarg1_);
  public final static native void Camera_setThumbnail(long jarg1, Camera jarg1_, long jarg2, Image jarg2_);
  public final static native long Camera_getThumbnail(long jarg1, Camera jarg1_);
  public final static native void Camera_setShutter(long jarg1, Camera jarg1_, long jarg2, Shutter jarg2_);
  public final static native long Camera_getShutter(long jarg1, Camera jarg1_);
  public final static native void Camera_setVignetting(long jarg1, Camera jarg1_, long[] jarg2);
  public final static native long[] Camera_getVignetting(long jarg1, Camera jarg1_);
  public final static native long Camera_getCenter(long jarg1, Camera jarg1_);
  public final static native long Camera_getError(long jarg1, Camera jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector2d jarg3_);
  public final static native long Camera_project(long jarg1, Camera jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_unproject__SWIG_0(long jarg1, Camera jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Camera_unproject__SWIG_1(long jarg1, Camera jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Camera_getReference(long jarg1, Camera jarg1_);
  public final static native void Camera_setReference(long jarg1, Camera jarg1_, long jarg2, Camera.Reference jarg2_);
  public final static native void Camera_setMeta(long jarg1, Camera jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Camera_getMeta(long jarg1, Camera jarg1_);
  public final static native void delete_Camera(long jarg1);
  public final static native long new_Marker(long jarg1, Marker jarg1_);
  public final static native long new_Marker_Reference(long jarg1, Marker.Reference jarg1_);
  public final static native void Marker_Reference_setEnabled(long jarg1, Marker.Reference jarg1_, boolean jarg2);
  public final static native boolean Marker_Reference_isEnabled(long jarg1, Marker.Reference jarg1_);
  public final static native void Marker_Reference_setLocation(long jarg1, Marker.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Marker_Reference_getLocation(long jarg1, Marker.Reference jarg1_);
  public final static native void Marker_Reference_setLocationAccuracy(long jarg1, Marker.Reference jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Marker_Reference_getLocationAccuracy(long jarg1, Marker.Reference jarg1_);
  public final static native void delete_Marker_Reference(long jarg1);
  public final static native long new_Marker_Projection__SWIG_0();
  public final static native long new_Marker_Projection__SWIG_1(long jarg1, Marker.Projection jarg1_);
  public final static native void Marker_Projection_setPoint(long jarg1, Marker.Projection jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Marker_Projection_getPoint(long jarg1, Marker.Projection jarg1_);
  public final static native void Marker_Projection_setPinned(long jarg1, Marker.Projection jarg1_, boolean jarg2);
  public final static native boolean Marker_Projection_isPinned(long jarg1, Marker.Projection jarg1_);
  public final static native void Marker_Projection_setValid(long jarg1, Marker.Projection jarg1_, boolean jarg2);
  public final static native boolean Marker_Projection_isValid(long jarg1, Marker.Projection jarg1_);
  public final static native void delete_Marker_Projection(long jarg1);
  public final static native int Marker_getKey(long jarg1, Marker jarg1_);
  public final static native long Marker_getChunk(long jarg1, Marker jarg1_);
  public final static native void Marker_setLabel(long jarg1, Marker jarg1_, String jarg2);
  public final static native String Marker_getLabel(long jarg1, Marker jarg1_);
  public final static native void Marker_setEnabled(long jarg1, Marker jarg1_, boolean jarg2);
  public final static native boolean Marker_isEnabled(long jarg1, Marker jarg1_);
  public final static native void Marker_setSelected(long jarg1, Marker jarg1_, boolean jarg2);
  public final static native boolean Marker_isSelected(long jarg1, Marker jarg1_);
  public final static native void Marker_setProjection(long jarg1, Marker jarg1_, int jarg2, long jarg3);
  public final static native long Marker_getProjection(long jarg1, Marker jarg1_, int jarg2);
  public final static native long Marker_getPosition(long jarg1, Marker jarg1_);
  public final static native int[] Marker_getCameraKeys(long jarg1, Marker jarg1_);
  public final static native long Marker_getReference(long jarg1, Marker jarg1_);
  public final static native void Marker_setReference(long jarg1, Marker jarg1_, long jarg2, Marker.Reference jarg2_);
  public final static native void Marker_setMeta(long jarg1, Marker jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Marker_getMeta(long jarg1, Marker jarg1_);
  public final static native void delete_Marker(long jarg1);
  public final static native long new_Scalebar(long jarg1, Scalebar jarg1_);
  public final static native long new_Scalebar_Reference(long jarg1, Scalebar.Reference jarg1_);
  public final static native void Scalebar_Reference_setEnabled(long jarg1, Scalebar.Reference jarg1_, boolean jarg2);
  public final static native boolean Scalebar_Reference_isEnabled(long jarg1, Scalebar.Reference jarg1_);
  public final static native void Scalebar_Reference_setDistance(long jarg1, Scalebar.Reference jarg1_, Double jarg2);
  public final static native Double Scalebar_Reference_getDistance(long jarg1, Scalebar.Reference jarg1_);
  public final static native void Scalebar_Reference_setDistanceAccuracy(long jarg1, Scalebar.Reference jarg1_, Double jarg2);
  public final static native Double Scalebar_Reference_getDistanceAccuracy(long jarg1, Scalebar.Reference jarg1_);
  public final static native void delete_Scalebar_Reference(long jarg1);
  public final static native int Scalebar_getKey(long jarg1, Scalebar jarg1_);
  public final static native long Scalebar_getChunk(long jarg1, Scalebar jarg1_);
  public final static native void Scalebar_setLabel(long jarg1, Scalebar jarg1_, String jarg2);
  public final static native String Scalebar_getLabel(long jarg1, Scalebar jarg1_);
  public final static native void Scalebar_setSelected(long jarg1, Scalebar jarg1_, boolean jarg2);
  public final static native boolean Scalebar_isSelected(long jarg1, Scalebar jarg1_);
  public final static native long Scalebar_getReference(long jarg1, Scalebar jarg1_);
  public final static native void Scalebar_setReference(long jarg1, Scalebar jarg1_, long jarg2, Scalebar.Reference jarg2_);
  public final static native void Scalebar_setMeta(long jarg1, Scalebar jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Scalebar_getMeta(long jarg1, Scalebar jarg1_);
  public final static native void delete_Scalebar(long jarg1);
  public final static native long new_CameraTrack__SWIG_0();
  public final static native long new_CameraTrack__SWIG_1(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setLabel(long jarg1, CameraTrack jarg1_, String jarg2);
  public final static native String CameraTrack_getLabel(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setSelected(long jarg1, CameraTrack jarg1_, boolean jarg2);
  public final static native boolean CameraTrack_isSelected(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setDuration(long jarg1, CameraTrack jarg1_, double jarg2);
  public final static native double CameraTrack_getDuration(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setFieldOfView(long jarg1, CameraTrack jarg1_, double jarg2);
  public final static native double CameraTrack_getFieldOfView(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setKeyframes(long jarg1, CameraTrack jarg1_, int[] jarg2);
  public final static native int[] CameraTrack_getKeyframes(long jarg1, CameraTrack jarg1_);
  public final static native int CameraTrack_getKey(long jarg1, CameraTrack jarg1_);
  public final static native long CameraTrack_getChunk(long jarg1, CameraTrack jarg1_);
  public final static native void CameraTrack_setMeta(long jarg1, CameraTrack jarg1_, long jarg2, MetaData jarg2_);
  public final static native long CameraTrack_getMeta(long jarg1, CameraTrack jarg1_);
  public final static native void delete_CameraTrack(long jarg1);
  public final static native long new_PointCloud__SWIG_0();
  public final static native long new_PointCloud__SWIG_1(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_Track_color_set(long jarg1, PointCloud.Track jarg1_, long jarg2, Vector3uc jarg2_);
  public final static native long PointCloud_Track_color_get(long jarg1, PointCloud.Track jarg1_);
  public final static native long new_PointCloud_Track();
  public final static native void delete_PointCloud_Track(long jarg1);
  public final static native void PointCloud_Point_point_set(long jarg1, PointCloud.Point jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long PointCloud_Point_point_get(long jarg1, PointCloud.Point jarg1_);
  public final static native void PointCloud_Point_w_set(long jarg1, PointCloud.Point jarg1_, float jarg2);
  public final static native float PointCloud_Point_w_get(long jarg1, PointCloud.Point jarg1_);
  public final static native void PointCloud_Point_flags_set(long jarg1, PointCloud.Point jarg1_, long jarg2);
  public final static native long PointCloud_Point_flags_get(long jarg1, PointCloud.Point jarg1_);
  public final static native void PointCloud_Point_id_set(long jarg1, PointCloud.Point jarg1_, long jarg2);
  public final static native long PointCloud_Point_id_get(long jarg1, PointCloud.Point jarg1_);
  public final static native long new_PointCloud_Point();
  public final static native void delete_PointCloud_Point(long jarg1);
  public final static native void PointCloud_Projection_point_set(long jarg1, PointCloud.Projection jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long PointCloud_Projection_point_get(long jarg1, PointCloud.Projection jarg1_);
  public final static native void PointCloud_Projection_size_set(long jarg1, PointCloud.Projection jarg1_, float jarg2);
  public final static native float PointCloud_Projection_size_get(long jarg1, PointCloud.Projection jarg1_);
  public final static native void PointCloud_Projection_id_set(long jarg1, PointCloud.Projection jarg1_, long jarg2);
  public final static native long PointCloud_Projection_id_get(long jarg1, PointCloud.Projection jarg1_);
  public final static native long new_PointCloud_Projection();
  public final static native void delete_PointCloud_Projection(long jarg1);
  public final static native long new_PointCloud_Tracks__SWIG_0();
  public final static native long new_PointCloud_Tracks__SWIG_1(long jarg1, PointCloud.Tracks jarg1_);
  public final static native long PointCloud_Tracks_copy(long jarg1, PointCloud.Tracks jarg1_);
  public final static native void PointCloud_Tracks_resize(long jarg1, PointCloud.Tracks jarg1_, long jarg2);
  public final static native long PointCloud_Tracks_getSize(long jarg1, PointCloud.Tracks jarg1_);
  public final static native void PointCloud_Tracks_set(long jarg1, PointCloud.Tracks jarg1_, long jarg2, long jarg3, PointCloud.Track jarg3_);
  public final static native long PointCloud_Tracks_get(long jarg1, PointCloud.Tracks jarg1_, long jarg2);
  public final static native void delete_PointCloud_Tracks(long jarg1);
  public final static native long new_PointCloud_Points__SWIG_0();
  public final static native long new_PointCloud_Points__SWIG_1(long jarg1, PointCloud.Points jarg1_);
  public final static native long PointCloud_Points_copy(long jarg1, PointCloud.Points jarg1_);
  public final static native void PointCloud_Points_resize(long jarg1, PointCloud.Points jarg1_, long jarg2);
  public final static native long PointCloud_Points_getSize(long jarg1, PointCloud.Points jarg1_);
  public final static native void PointCloud_Points_set(long jarg1, PointCloud.Points jarg1_, long jarg2, long jarg3, PointCloud.Point jarg3_);
  public final static native long PointCloud_Points_get(long jarg1, PointCloud.Points jarg1_, long jarg2);
  public final static native void delete_PointCloud_Points(long jarg1);
  public final static native long new_PointCloud_Projections__SWIG_0();
  public final static native long new_PointCloud_Projections__SWIG_1(long jarg1, PointCloud.Projections jarg1_);
  public final static native long PointCloud_Projections_copy(long jarg1, PointCloud.Projections jarg1_);
  public final static native void PointCloud_Projections_resize(long jarg1, PointCloud.Projections jarg1_, long jarg2);
  public final static native long PointCloud_Projections_getSize(long jarg1, PointCloud.Projections jarg1_);
  public final static native void PointCloud_Projections_set(long jarg1, PointCloud.Projections jarg1_, long jarg2, long jarg3, PointCloud.Projection jarg3_);
  public final static native long PointCloud_Projections_get(long jarg1, PointCloud.Projections jarg1_, long jarg2);
  public final static native void delete_PointCloud_Projections(long jarg1);
  public final static native long PointCloud_getChunk(long jarg1, PointCloud jarg1_);
  public final static native String PointCloud_getPath(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_setMeta(long jarg1, PointCloud jarg1_, long jarg2, MetaData jarg2_);
  public final static native long PointCloud_getMeta(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_setTracks(long jarg1, PointCloud jarg1_, long jarg2);
  public final static native long PointCloud_getTracks(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_setPoints(long jarg1, PointCloud jarg1_, long jarg2);
  public final static native long PointCloud_getPoints(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_setProjections(long jarg1, PointCloud jarg1_, int jarg2, long jarg3);
  public final static native long PointCloud_getProjections(long jarg1, PointCloud jarg1_, int jarg2);
  public final static native int[] PointCloud_getCameraKeys(long jarg1, PointCloud jarg1_);
  public final static native void PointCloud_cleanup(long jarg1, PointCloud jarg1_, Progress jarg2);
  public final static native long PointCloud_pickPoint(long jarg1, PointCloud jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector3d jarg3_);
  public final static native long PointCloud_renderPreview(long jarg1, PointCloud jarg1_, long jarg2, long jarg3, long jarg4, Matrix4x4d jarg4_, int jarg5, Progress jarg6);
  public final static native void delete_PointCloud(long jarg1);
  public final static native long new_DepthMap__SWIG_0();
  public final static native long new_DepthMap__SWIG_1(long jarg1, DepthMap jarg1_);
  public final static native void DepthMap_setCalibration(long jarg1, DepthMap jarg1_, int jarg2, long jarg3, Calibration jarg3_);
  public final static native long DepthMap_getCalibration(long jarg1, DepthMap jarg1_, int jarg2);
  public final static native void DepthMap_setImage(long jarg1, DepthMap jarg1_, int jarg2, long jarg3, Image jarg3_);
  public final static native long DepthMap_getImage(long jarg1, DepthMap jarg1_, int jarg2);
  public final static native void delete_DepthMap(long jarg1);
  public final static native long new_DepthMaps__SWIG_0();
  public final static native long new_DepthMaps__SWIG_1(long jarg1, DepthMaps jarg1_);
  public final static native int DepthMaps_getKey(long jarg1, DepthMaps jarg1_);
  public final static native long DepthMaps_getChunk(long jarg1, DepthMaps jarg1_);
  public final static native void DepthMaps_setLabel(long jarg1, DepthMaps jarg1_, String jarg2);
  public final static native String DepthMaps_getLabel(long jarg1, DepthMaps jarg1_);
  public final static native void DepthMaps_setDepthMap(long jarg1, DepthMaps jarg1_, int jarg2, long jarg3, DepthMap jarg3_);
  public final static native long DepthMaps_getDepthMap(long jarg1, DepthMaps jarg1_, int jarg2);
  public final static native String DepthMaps_getPath(long jarg1, DepthMaps jarg1_);
  public final static native void DepthMaps_setMeta(long jarg1, DepthMaps jarg1_, long jarg2, MetaData jarg2_);
  public final static native long DepthMaps_getMeta(long jarg1, DepthMaps jarg1_);
  public final static native void delete_DepthMaps(long jarg1);
  public final static native long new_DenseCloud__SWIG_0();
  public final static native long new_DenseCloud__SWIG_1(long jarg1, DenseCloud jarg1_);
  public final static native int DenseCloud_getKey(long jarg1, DenseCloud jarg1_);
  public final static native long DenseCloud_getChunk(long jarg1, DenseCloud jarg1_);
  public final static native void DenseCloud_setLabel(long jarg1, DenseCloud jarg1_, String jarg2);
  public final static native String DenseCloud_getLabel(long jarg1, DenseCloud jarg1_);
  public final static native String DenseCloud_getPath(long jarg1, DenseCloud jarg1_);
  public final static native void DenseCloud_setMeta(long jarg1, DenseCloud jarg1_, long jarg2, MetaData jarg2_);
  public final static native long DenseCloud_getMeta(long jarg1, DenseCloud jarg1_);
  public final static native long DenseCloud_pickPoint(long jarg1, DenseCloud jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector3d jarg3_);
  public final static native void DenseCloud_compactPoints(long jarg1, DenseCloud jarg1_, Progress jarg2);
  public final static native void DenseCloud_removePoints(long jarg1, DenseCloud jarg1_, int[] jarg2, Progress jarg3);
  public final static native void DenseCloud_restorePoints(long jarg1, DenseCloud jarg1_, int[] jarg2, Progress jarg3);
  public final static native void DenseCloud_assignClass(long jarg1, DenseCloud jarg1_, int jarg2, int[] jarg3, Progress jarg4);
  public final static native long DenseCloud_renderPreview(long jarg1, DenseCloud jarg1_, long jarg2, long jarg3, long jarg4, Matrix4x4d jarg4_, int jarg5, Progress jarg6);
  public final static native void delete_DenseCloud(long jarg1);
  public final static native long new_Model__SWIG_0();
  public final static native long new_Model__SWIG_1(long jarg1, Model jarg1_);
  public final static native int Model_Texture_getKey(long jarg1, Model.Texture jarg1_);
  public final static native int Model_Texture_getTextureType(long jarg1, Model.Texture jarg1_);
  public final static native void Model_Texture_setLabel(long jarg1, Model.Texture jarg1_, String jarg2);
  public final static native String Model_Texture_getLabel(long jarg1, Model.Texture jarg1_);
  public final static native void Model_Texture_setMeta(long jarg1, Model.Texture jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Model_Texture_getMeta(long jarg1, Model.Texture jarg1_);
  public final static native void delete_Model_Texture(long jarg1);
  public final static native void Model_Face_setHidden(long jarg1, Model.Face jarg1_, boolean jarg2);
  public final static native boolean Model_Face_isHidden(long jarg1, Model.Face jarg1_);
  public final static native void Model_Face_setSelected(long jarg1, Model.Face jarg1_, boolean jarg2);
  public final static native boolean Model_Face_isSelected(long jarg1, Model.Face jarg1_);
  public final static native void Model_Face_setVertices(long jarg1, Model.Face jarg1_, int[] jarg2);
  public final static native int[] Model_Face_getVertices(long jarg1, Model.Face jarg1_);
  public final static native long new_Model_Face();
  public final static native void delete_Model_Face(long jarg1);
  public final static native void Model_Vertex_setCoord(long jarg1, Model.Vertex jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Model_Vertex_getCoord(long jarg1, Model.Vertex jarg1_);
  public final static native void Model_Vertex_setConfidence(long jarg1, Model.Vertex jarg1_, float jarg2);
  public final static native float Model_Vertex_getConfidence(long jarg1, Model.Vertex jarg1_);
  public final static native long new_Model_Vertex();
  public final static native void delete_Model_Vertex(long jarg1);
  public final static native void Model_TexFace_setTextureIndex(long jarg1, Model.TexFace jarg1_, int jarg2);
  public final static native int Model_TexFace_getTextureIndex(long jarg1, Model.TexFace jarg1_);
  public final static native void Model_TexFace_setVertices(long jarg1, Model.TexFace jarg1_, int[] jarg2);
  public final static native int[] Model_TexFace_getVertices(long jarg1, Model.TexFace jarg1_);
  public final static native long new_Model_TexFace();
  public final static native void delete_Model_TexFace(long jarg1);
  public final static native void Model_TexVertex_setCoord(long jarg1, Model.TexVertex jarg1_, long jarg2, Vector2d jarg2_);
  public final static native long Model_TexVertex_getCoord(long jarg1, Model.TexVertex jarg1_);
  public final static native long new_Model_TexVertex();
  public final static native void delete_Model_TexVertex(long jarg1);
  public final static native long new_Model_Mesh__SWIG_0();
  public final static native long new_Model_Mesh__SWIG_1(long jarg1, Model.Mesh jarg1_);
  public final static native void Model_Mesh_setFaceCount(long jarg1, Model.Mesh jarg1_, int jarg2);
  public final static native int Model_Mesh_getFaceCount(long jarg1, Model.Mesh jarg1_);
  public final static native void Model_Mesh_setVertexCount(long jarg1, Model.Mesh jarg1_, int jarg2);
  public final static native int Model_Mesh_getVertexCount(long jarg1, Model.Mesh jarg1_);
  public final static native void Model_Mesh_setFace(long jarg1, Model.Mesh jarg1_, int jarg2, long jarg3, Model.Face jarg3_);
  public final static native long Model_Mesh_getFace(long jarg1, Model.Mesh jarg1_, int jarg2);
  public final static native void Model_Mesh_setVertex(long jarg1, Model.Mesh jarg1_, int jarg2, long jarg3, Model.Vertex jarg3_);
  public final static native long Model_Mesh_getVertex(long jarg1, Model.Mesh jarg1_, int jarg2);
  public final static native void Model_Mesh_setVertexColor(long jarg1, Model.Mesh jarg1_, int jarg2, long jarg3, Vector3uc jarg3_);
  public final static native long Model_Mesh_getVertexColor(long jarg1, Model.Mesh jarg1_, int jarg2);
  public final static native void delete_Model_Mesh(long jarg1);
  public final static native int Model_getKey(long jarg1, Model jarg1_);
  public final static native long Model_getChunk(long jarg1, Model jarg1_);
  public final static native void Model_setLabel(long jarg1, Model jarg1_, String jarg2);
  public final static native String Model_getLabel(long jarg1, Model jarg1_);
  public final static native long[] Model_getTextures(long jarg1, Model jarg1_);
  public final static native long Model_getActiveTexture(long jarg1, Model jarg1_, int jarg2);
  public final static native void Model_setMesh(long jarg1, Model jarg1_, long jarg2);
  public final static native long Model_getMesh(long jarg1, Model jarg1_);
  public final static native String Model_getPath(long jarg1, Model jarg1_);
  public final static native void Model_setMeta(long jarg1, Model jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Model_getMeta(long jarg1, Model jarg1_);
  public final static native long Model_pickPoint(long jarg1, Model jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector3d jarg3_);
  public final static native long Model_renderPreview(long jarg1, Model jarg1_, long jarg2, long jarg3, long jarg4, Matrix4x4d jarg4_, Progress jarg5);
  public final static native void delete_Model(long jarg1);
  public final static native long new_TiledModel__SWIG_0();
  public final static native long new_TiledModel__SWIG_1(long jarg1, TiledModel jarg1_);
  public final static native int TiledModel_getKey(long jarg1, TiledModel jarg1_);
  public final static native long TiledModel_getChunk(long jarg1, TiledModel jarg1_);
  public final static native void TiledModel_setLabel(long jarg1, TiledModel jarg1_, String jarg2);
  public final static native String TiledModel_getLabel(long jarg1, TiledModel jarg1_);
  public final static native String TiledModel_getPath(long jarg1, TiledModel jarg1_);
  public final static native void TiledModel_setMeta(long jarg1, TiledModel jarg1_, long jarg2, MetaData jarg2_);
  public final static native long TiledModel_getMeta(long jarg1, TiledModel jarg1_);
  public final static native long TiledModel_pickPoint(long jarg1, TiledModel jarg1_, long jarg2, Vector3d jarg2_, long jarg3, Vector3d jarg3_);
  public final static native long TiledModel_renderPreview(long jarg1, TiledModel jarg1_, long jarg2, long jarg3, long jarg4, Matrix4x4d jarg4_, Progress jarg5);
  public final static native void delete_TiledModel(long jarg1);
  public final static native long new_Elevation__SWIG_0();
  public final static native long new_Elevation__SWIG_1(long jarg1, Elevation jarg1_);
  public final static native int Elevation_getKey(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getChunk(long jarg1, Elevation jarg1_);
  public final static native void Elevation_setLabel(long jarg1, Elevation jarg1_, String jarg2);
  public final static native String Elevation_getLabel(long jarg1, Elevation jarg1_);
  public final static native String Elevation_getPath(long jarg1, Elevation jarg1_);
  public final static native void Elevation_setMeta(long jarg1, Elevation jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Elevation_getMeta(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getWidth(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getHeight(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getTopLeft(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getBottomRight(long jarg1, Elevation jarg1_);
  public final static native long Elevation_getProjection(long jarg1, Elevation jarg1_);
  public final static native double Elevation_getResolution(long jarg1, Elevation jarg1_);
  public final static native float Elevation_getMinElevation(long jarg1, Elevation jarg1_);
  public final static native float Elevation_getMaxElevation(long jarg1, Elevation jarg1_);
  public final static native void delete_Elevation(long jarg1);
  public final static native long new_Orthomosaic__SWIG_0();
  public final static native long new_Orthomosaic__SWIG_1(long jarg1, Orthomosaic jarg1_);
  public final static native int Orthomosaic_getKey(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getChunk(long jarg1, Orthomosaic jarg1_);
  public final static native void Orthomosaic_setLabel(long jarg1, Orthomosaic jarg1_, String jarg2);
  public final static native String Orthomosaic_getLabel(long jarg1, Orthomosaic jarg1_);
  public final static native String Orthomosaic_getPath(long jarg1, Orthomosaic jarg1_);
  public final static native void Orthomosaic_setMeta(long jarg1, Orthomosaic jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Orthomosaic_getMeta(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getWidth(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getHeight(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getTopLeft(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getBottomRight(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_getProjection(long jarg1, Orthomosaic jarg1_);
  public final static native double Orthomosaic_getResolution(long jarg1, Orthomosaic jarg1_);
  public final static native long Orthomosaic_renderPreview(long jarg1, Orthomosaic jarg1_, long jarg2, long jarg3, Progress jarg4);
  public final static native void delete_Orthomosaic(long jarg1);
  public final static native long new_ShapeGroup(long jarg1, ShapeGroup jarg1_);
  public final static native int ShapeGroup_getKey(long jarg1, ShapeGroup jarg1_);
  public final static native void ShapeGroup_setLabel(long jarg1, ShapeGroup jarg1_, String jarg2);
  public final static native String ShapeGroup_getLabel(long jarg1, ShapeGroup jarg1_);
  public final static native void ShapeGroup_setEnabled(long jarg1, ShapeGroup jarg1_, boolean jarg2);
  public final static native boolean ShapeGroup_isEnabled(long jarg1, ShapeGroup jarg1_);
  public final static native void ShapeGroup_setSelected(long jarg1, ShapeGroup jarg1_, boolean jarg2);
  public final static native boolean ShapeGroup_isSelected(long jarg1, ShapeGroup jarg1_);
  public final static native void delete_ShapeGroup(long jarg1);
  public final static native long new_Shape(long jarg1, Shape jarg1_);
  public final static native int Shape_getKey(long jarg1, Shape jarg1_);
  public final static native void Shape_setType(long jarg1, Shape jarg1_, int jarg2);
  public final static native int Shape_getType(long jarg1, Shape jarg1_);
  public final static native void Shape_setBoundaryType(long jarg1, Shape jarg1_, int jarg2);
  public final static native int Shape_getBoundaryType(long jarg1, Shape jarg1_);
  public final static native void Shape_setLabel(long jarg1, Shape jarg1_, String jarg2);
  public final static native String Shape_getLabel(long jarg1, Shape jarg1_);
  public final static native void Shape_setSelected(long jarg1, Shape jarg1_, boolean jarg2);
  public final static native boolean Shape_isSelected(long jarg1, Shape jarg1_);
  public final static native void Shape_setGroup(long jarg1, Shape jarg1_, long jarg2, ShapeGroup jarg2_);
  public final static native long Shape_getGroup(long jarg1, Shape jarg1_);
  public final static native void Shape_resize(long jarg1, Shape jarg1_, long jarg2);
  public final static native long Shape_getSize(long jarg1, Shape jarg1_);
  public final static native void Shape_setVertex(long jarg1, Shape jarg1_, long jarg2, long jarg3, Vector3d jarg3_);
  public final static native long Shape_getVertex(long jarg1, Shape jarg1_, long jarg2);
  public final static native void Shape_setZEnabled(long jarg1, Shape jarg1_, boolean jarg2);
  public final static native boolean Shape_isZEnabled(long jarg1, Shape jarg1_);
  public final static native void delete_Shape(long jarg1);
  public final static native long new_Shapes__SWIG_0();
  public final static native long new_Shapes__SWIG_1(long jarg1, Shapes jarg1_);
  public final static native long Shapes_getChunk(long jarg1, Shapes jarg1_);
  public final static native String Shapes_getPath(long jarg1, Shapes jarg1_);
  public final static native void Shapes_setMeta(long jarg1, Shapes jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Shapes_getMeta(long jarg1, Shapes jarg1_);
  public final static native long[] Shapes_getShapes(long jarg1, Shapes jarg1_);
  public final static native long[] Shapes_getGroups(long jarg1, Shapes jarg1_);
  public final static native long Shapes_getProjection(long jarg1, Shapes jarg1_);
  public final static native void delete_Shapes(long jarg1);
  public final static native long new_Chunk(long jarg1, Chunk jarg1_);
  public final static native String Chunk_dump(long jarg1, Chunk jarg1_);
  public final static native void Chunk_load(long jarg1, Chunk jarg1_, String jarg2);
  public final static native int Chunk_getKey(long jarg1, Chunk jarg1_);
  public final static native int Chunk_getFrameKey(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getDocument(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setLabel(long jarg1, Chunk jarg1_, String jarg2);
  public final static native String Chunk_getLabel(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setEnabled(long jarg1, Chunk jarg1_, boolean jarg2);
  public final static native boolean Chunk_isEnabled(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setSelected(long jarg1, Chunk jarg1_, boolean jarg2);
  public final static native boolean Chunk_isSelected(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getFrames(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getSensors(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getCameraGroups(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getMarkerGroups(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getScalebarGroups(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getCameras(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getMarkers(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getScalebars(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getCameraTracks(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getFrameKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getSensorKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getCameraGroupKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getMarkerGroupKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getScalebarGroupKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getCameraKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getMarkerKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getScalebarKeys(long jarg1, Chunk jarg1_);
  public final static native int[] Chunk_getCameraTrackKeys(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getFrame(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getSensor(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getCameraGroup(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getMarkerGroup(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getScalebarGroup(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getCamera(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getMarker(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getScalebar(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_getCameraTrack(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_addFrame(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addSensor(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addCameraGroup(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addMarkerGroup(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addScalebarGroup(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addCamera(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addMarker__SWIG_0(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addCameraTrack(long jarg1, Chunk jarg1_);
  public final static native long Chunk_addMarker__SWIG_1(long jarg1, Chunk jarg1_, long jarg2, Vector3d jarg2_, boolean jarg3);
  public final static native long Chunk_addScalebar__SWIG_0(long jarg1, Chunk jarg1_, long jarg2, Camera jarg2_, long jarg3, Camera jarg3_);
  public final static native long Chunk_addScalebar__SWIG_1(long jarg1, Chunk jarg1_, long jarg2, Marker jarg2_, long jarg3, Marker jarg3_);
  public final static native void Chunk_removeFrames(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeSensors(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeCameraGroups(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeMarkerGroups(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeScalebarGroups(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeCameras(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeMarkers(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeScalebars(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_removeCameraTracks(long jarg1, Chunk jarg1_, int[] jarg2);
  public final static native void Chunk_setCoordinateSystem(long jarg1, Chunk jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long Chunk_getCoordinateSystem(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setCameraCoordinateSystem(long jarg1, Chunk jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long Chunk_getCameraCoordinateSystem(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setMarkerCoordinateSystem(long jarg1, Chunk jarg1_, long jarg2, CoordinateSystem jarg2_);
  public final static native long Chunk_getMarkerCoordinateSystem(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setTransform(long jarg1, Chunk jarg1_, long jarg2, Transform jarg2_);
  public final static native long Chunk_getTransform(long jarg1, Chunk jarg1_);
  public final static native void Chunk_resetTransform(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasTransform(long jarg1, Chunk jarg1_);
  public final static native void Chunk_updateTransform(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setRegion(long jarg1, Chunk jarg1_, long jarg2, Region jarg2_);
  public final static native long Chunk_getRegion(long jarg1, Chunk jarg1_);
  public final static native void Chunk_resetRegion(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setCirCalibration(long jarg1, Chunk jarg1_, long jarg2, Matrix3x3d jarg2_);
  public final static native long Chunk_getCirCalibration(long jarg1, Chunk jarg1_);
  public final static native void Chunk_updateCirCalibration(long jarg1, Chunk jarg1_, Progress jarg2);
  public final static native void Chunk_setRasterTransform(long jarg1, Chunk jarg1_, long jarg2, RasterTransform jarg2_);
  public final static native long Chunk_getRasterTransform(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setCameraLocationAccuracy(long jarg1, Chunk jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Chunk_getCameraLocationAccuracy(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setCameraOrientationAccuracy(long jarg1, Chunk jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Chunk_getCameraOrientationAccuracy(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setMarkerLocationAccuracy(long jarg1, Chunk jarg1_, long jarg2, Vector3d jarg2_);
  public final static native long Chunk_getMarkerLocationAccuracy(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setMarkerProjectionAccuracy(long jarg1, Chunk jarg1_, double jarg2);
  public final static native double Chunk_getMarkerProjectionAccuracy(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setTiepointProjectionAccuracy(long jarg1, Chunk jarg1_, double jarg2);
  public final static native double Chunk_getTiepointProjectionAccuracy(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setPrimaryChannel(long jarg1, Chunk jarg1_, int jarg2);
  public final static native int Chunk_getPrimaryChannel(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setImageBrightness(long jarg1, Chunk jarg1_, double jarg2);
  public final static native double Chunk_getImageBrightness(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setImageContrast(long jarg1, Chunk jarg1_, double jarg2);
  public final static native double Chunk_getImageContrast(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasPointCloud(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasDenseCloud(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasDepthMaps(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasModel(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasTiledModel(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasElevation(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasOrthomosaic(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_hasShapes(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getPointCloud(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getDenseCloud(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getDepthMaps(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getModel(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getTiledModel(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getElevation(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getOrthomosaic(long jarg1, Chunk jarg1_);
  public final static native long Chunk_getShapes(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removePointCloud(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeDenseCloud(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeDepthMaps(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeModel(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeTiledModel(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeElevation(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeOrthomosaic(long jarg1, Chunk jarg1_);
  public final static native void Chunk_removeShapes(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getDepthMapsSets(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getDenseClouds(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getModels(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getTiledModels(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getElevations(long jarg1, Chunk jarg1_);
  public final static native long[] Chunk_getOrthomosaics(long jarg1, Chunk jarg1_);
  public final static native void Chunk_setDepthMapsKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setDenseCloudKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setModelKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setTiledModelKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setElevationKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setOrthomosaicKey(long jarg1, Chunk jarg1_, int jarg2);
  public final static native void Chunk_setMeta(long jarg1, Chunk jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Chunk_getMeta(long jarg1, Chunk jarg1_);
  public final static native boolean Chunk_loadReferenceExif(long jarg1, Chunk jarg1_, boolean jarg2, boolean jarg3);
  public final static native void Chunk_addPhotos(long jarg1, Chunk jarg1_, String[] jarg2, Progress jarg3);
  public final static native void Chunk_thinPointCloud(long jarg1, Chunk jarg1_, int jarg2);
  public final static native long Chunk_renderPreview(long jarg1, Chunk jarg1_, long jarg2, long jarg3, long jarg4, Matrix4x4d jarg4_, int jarg5, Progress jarg6);
  public final static native void delete_Chunk(long jarg1);
  public final static native long new_Document__SWIG_0();
  public final static native long new_Document__SWIG_1(long jarg1, Document jarg1_);
  public final static native String Document_dump(long jarg1, Document jarg1_);
  public final static native void Document_load(long jarg1, Document jarg1_, String jarg2);
  public final static native void Document_clear(long jarg1, Document jarg1_);
  public final static native void Document_save(long jarg1, Document jarg1_, String jarg2, int[] jarg3, int jarg4, boolean jarg5, Progress jarg6);
  public final static native void Document_open(long jarg1, Document jarg1_, String jarg2, boolean jarg3, Progress jarg4);
  public final static native String Document_getPath(long jarg1, Document jarg1_);
  public final static native void Document_setReadOnly(long jarg1, Document jarg1_, boolean jarg2);
  public final static native boolean Document_isReadOnly(long jarg1, Document jarg1_);
  public final static native long Document_addChunk(long jarg1, Document jarg1_);
  public final static native long[] Document_getChunks(long jarg1, Document jarg1_);
  public final static native int[] Document_getChunkKeys(long jarg1, Document jarg1_);
  public final static native long Document_getChunk(long jarg1, Document jarg1_, int jarg2);
  public final static native long Document_getActiveChunk(long jarg1, Document jarg1_);
  public final static native void Document_setActiveChunk(long jarg1, Document jarg1_, long jarg2, Chunk jarg2_);
  public final static native void Document_remove(long jarg1, Document jarg1_, long jarg2, Chunk jarg2_);
  public final static native void Document_append(long jarg1, Document jarg1_, long jarg2, Document jarg2_, Progress jarg3);
  public final static native void Document_setMeta(long jarg1, Document jarg1_, long jarg2, MetaData jarg2_);
  public final static native long Document_getMeta(long jarg1, Document jarg1_);
  public final static native void delete_Document(long jarg1);
  public final static native long new_NetworkTask__SWIG_0();
  public final static native long new_NetworkTask__SWIG_1(long jarg1, NetworkTask jarg1_);
  public final static native void NetworkTask_setName(long jarg1, NetworkTask jarg1_, String jarg2);
  public final static native String NetworkTask_getName(long jarg1, NetworkTask jarg1_);
  public final static native String[] NetworkTask_getParameterNames(long jarg1, NetworkTask jarg1_);
  public final static native void NetworkTask_setParameter(long jarg1, NetworkTask jarg1_, String jarg2, long jarg3, Variant jarg3_);
  public final static native long NetworkTask_getParameter(long jarg1, NetworkTask jarg1_, String jarg2);
  public final static native void NetworkTask_setChunks(long jarg1, NetworkTask jarg1_, int[] jarg2);
  public final static native int[] NetworkTask_getChunks(long jarg1, NetworkTask jarg1_);
  public final static native int[] NetworkTask_getFrames(long jarg1, NetworkTask jarg1_, int jarg2);
  public final static native void NetworkTask_setFrames(long jarg1, NetworkTask jarg1_, int jarg2, int[] jarg3);
  public final static native void NetworkTask_setGPUSupported(long jarg1, NetworkTask jarg1_, boolean jarg2);
  public final static native boolean NetworkTask_isGPUSupported(long jarg1, NetworkTask jarg1_);
  public final static native void delete_NetworkTask(long jarg1);
  public final static native long new_NetworkClient();
  public final static native void NetworkClient_LogRecord_type_set(long jarg1, NetworkClient.LogRecord jarg1_, int jarg2);
  public final static native int NetworkClient_LogRecord_type_get(long jarg1, NetworkClient.LogRecord jarg1_);
  public final static native void NetworkClient_LogRecord_text_set(long jarg1, NetworkClient.LogRecord jarg1_, String jarg2);
  public final static native String NetworkClient_LogRecord_text_get(long jarg1, NetworkClient.LogRecord jarg1_);
  public final static native long new_NetworkClient_LogRecord();
  public final static native void delete_NetworkClient_LogRecord(long jarg1);
  public final static native void NetworkClient_ResourceRecord_time_set(long jarg1, NetworkClient.ResourceRecord jarg1_, double jarg2);
  public final static native double NetworkClient_ResourceRecord_time_get(long jarg1, NetworkClient.ResourceRecord jarg1_);
  public final static native void NetworkClient_ResourceRecord_ramUsage_set(long jarg1, NetworkClient.ResourceRecord jarg1_, double jarg2);
  public final static native double NetworkClient_ResourceRecord_ramUsage_get(long jarg1, NetworkClient.ResourceRecord jarg1_);
  public final static native void NetworkClient_ResourceRecord_cpuUsage_set(long jarg1, NetworkClient.ResourceRecord jarg1_, double jarg2);
  public final static native double NetworkClient_ResourceRecord_cpuUsage_get(long jarg1, NetworkClient.ResourceRecord jarg1_);
  public final static native long new_NetworkClient_ResourceRecord();
  public final static native void delete_NetworkClient_ResourceRecord(long jarg1);
  public final static native void NetworkClient_ServerInfo_timeStarted_set(long jarg1, NetworkClient.ServerInfo jarg1_, long jarg2);
  public final static native long NetworkClient_ServerInfo_timeStarted_get(long jarg1, NetworkClient.ServerInfo jarg1_);
  public final static native void NetworkClient_ServerInfo_version_set(long jarg1, NetworkClient.ServerInfo jarg1_, String jarg2);
  public final static native String NetworkClient_ServerInfo_version_get(long jarg1, NetworkClient.ServerInfo jarg1_);
  public final static native long new_NetworkClient_ServerInfo();
  public final static native void delete_NetworkClient_ServerInfo(long jarg1);
  public final static native void NetworkClient_TaskStatus_task_set(long jarg1, NetworkClient.TaskStatus jarg1_, long jarg2, NetworkTask jarg2_);
  public final static native long NetworkClient_TaskStatus_task_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_status_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_status_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_progress_set(long jarg1, NetworkClient.TaskStatus jarg1_, double jarg2);
  public final static native double NetworkClient_TaskStatus_progress_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_timeElapsed_set(long jarg1, NetworkClient.TaskStatus jarg1_, double jarg2);
  public final static native double NetworkClient_TaskStatus_timeElapsed_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_timeLeft_set(long jarg1, NetworkClient.TaskStatus jarg1_, double jarg2);
  public final static native double NetworkClient_TaskStatus_timeLeft_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_itemsTotal_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_itemsTotal_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_itemsDone_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_itemsDone_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_workitemsWaiting_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_workitemsWaiting_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_workitemsWorking_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_workitemsWorking_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_workitemsCompleted_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_workitemsCompleted_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_workitemsFailed_set(long jarg1, NetworkClient.TaskStatus jarg1_, int jarg2);
  public final static native int NetworkClient_TaskStatus_workitemsFailed_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native void NetworkClient_TaskStatus_log_set(long jarg1, NetworkClient.TaskStatus jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_TaskStatus_log_get(long jarg1, NetworkClient.TaskStatus jarg1_);
  public final static native long new_NetworkClient_TaskStatus();
  public final static native void delete_NetworkClient_TaskStatus(long jarg1);
  public final static native void NetworkClient_BatchStatus_path_set(long jarg1, NetworkClient.BatchStatus jarg1_, String jarg2);
  public final static native String NetworkClient_BatchStatus_path_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_uuid_set(long jarg1, NetworkClient.BatchStatus jarg1_, String jarg2);
  public final static native String NetworkClient_BatchStatus_uuid_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_username_set(long jarg1, NetworkClient.BatchStatus jarg1_, String jarg2);
  public final static native String NetworkClient_BatchStatus_username_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_meta_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2, MetaData jarg2_);
  public final static native long NetworkClient_BatchStatus_meta_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_status_set(long jarg1, NetworkClient.BatchStatus jarg1_, int jarg2);
  public final static native int NetworkClient_BatchStatus_status_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_priority_set(long jarg1, NetworkClient.BatchStatus jarg1_, int jarg2);
  public final static native int NetworkClient_BatchStatus_priority_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_timeStarted_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2);
  public final static native long NetworkClient_BatchStatus_timeStarted_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_timeFinished_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2);
  public final static native long NetworkClient_BatchStatus_timeFinished_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_tasks_set(long jarg1, NetworkClient.BatchStatus jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_BatchStatus_tasks_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_errorTime_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2);
  public final static native long NetworkClient_BatchStatus_errorTime_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_errorNodeId_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2);
  public final static native long NetworkClient_BatchStatus_errorNodeId_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_errorMessage_set(long jarg1, NetworkClient.BatchStatus jarg1_, String jarg2);
  public final static native String NetworkClient_BatchStatus_errorMessage_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native void NetworkClient_BatchStatus_nextRevision_set(long jarg1, NetworkClient.BatchStatus jarg1_, long jarg2);
  public final static native long NetworkClient_BatchStatus_nextRevision_get(long jarg1, NetworkClient.BatchStatus jarg1_);
  public final static native long new_NetworkClient_BatchStatus();
  public final static native void delete_NetworkClient_BatchStatus(long jarg1);
  public final static native void NetworkClient_BatchItem_batchId_set(long jarg1, NetworkClient.BatchItem jarg1_, long jarg2);
  public final static native long NetworkClient_BatchItem_batchId_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_path_set(long jarg1, NetworkClient.BatchItem jarg1_, String jarg2);
  public final static native String NetworkClient_BatchItem_path_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_uuid_set(long jarg1, NetworkClient.BatchItem jarg1_, String jarg2);
  public final static native String NetworkClient_BatchItem_uuid_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_username_set(long jarg1, NetworkClient.BatchItem jarg1_, String jarg2);
  public final static native String NetworkClient_BatchItem_username_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_meta_set(long jarg1, NetworkClient.BatchItem jarg1_, long jarg2, MetaData jarg2_);
  public final static native long NetworkClient_BatchItem_meta_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_status_set(long jarg1, NetworkClient.BatchItem jarg1_, int jarg2);
  public final static native int NetworkClient_BatchItem_status_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_priority_set(long jarg1, NetworkClient.BatchItem jarg1_, int jarg2);
  public final static native int NetworkClient_BatchItem_priority_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_nodeLimit_set(long jarg1, NetworkClient.BatchItem jarg1_, int jarg2);
  public final static native int NetworkClient_BatchItem_nodeLimit_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_nodeVersion_set(long jarg1, NetworkClient.BatchItem jarg1_, String jarg2);
  public final static native String NetworkClient_BatchItem_nodeVersion_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_timeStarted_set(long jarg1, NetworkClient.BatchItem jarg1_, long jarg2);
  public final static native long NetworkClient_BatchItem_timeStarted_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_timeFinished_set(long jarg1, NetworkClient.BatchItem jarg1_, long jarg2);
  public final static native long NetworkClient_BatchItem_timeFinished_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native void NetworkClient_BatchItem_task_set(long jarg1, NetworkClient.BatchItem jarg1_, long jarg2, NetworkClient.TaskStatus jarg2_);
  public final static native long NetworkClient_BatchItem_task_get(long jarg1, NetworkClient.BatchItem jarg1_);
  public final static native long new_NetworkClient_BatchItem();
  public final static native void delete_NetworkClient_BatchItem(long jarg1);
  public final static native void NetworkClient_NodeStatus_uuid_set(long jarg1, NetworkClient.NodeStatus jarg1_, String jarg2);
  public final static native String NetworkClient_NodeStatus_uuid_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_hostname_set(long jarg1, NetworkClient.NodeStatus jarg1_, String jarg2);
  public final static native String NetworkClient_NodeStatus_hostname_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_hostaddr_set(long jarg1, NetworkClient.NodeStatus jarg1_, String jarg2);
  public final static native String NetworkClient_NodeStatus_hostaddr_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_ramSize_set(long jarg1, NetworkClient.NodeStatus jarg1_, double jarg2);
  public final static native double NetworkClient_NodeStatus_ramSize_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_gpuMask_set(long jarg1, NetworkClient.NodeStatus jarg1_, long jarg2);
  public final static native long NetworkClient_NodeStatus_gpuMask_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_cpuEnable_set(long jarg1, NetworkClient.NodeStatus jarg1_, boolean jarg2);
  public final static native boolean NetworkClient_NodeStatus_cpuEnable_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_nextRevision_set(long jarg1, NetworkClient.NodeStatus jarg1_, long jarg2);
  public final static native long NetworkClient_NodeStatus_nextRevision_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_log_set(long jarg1, NetworkClient.NodeStatus jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_NodeStatus_log_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native void NetworkClient_NodeStatus_resourceUsage_set(long jarg1, NetworkClient.NodeStatus jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_NodeStatus_resourceUsage_get(long jarg1, NetworkClient.NodeStatus jarg1_);
  public final static native long new_NetworkClient_NodeStatus();
  public final static native void delete_NetworkClient_NodeStatus(long jarg1);
  public final static native void NetworkClient_NodeItem_uuid_set(long jarg1, NetworkClient.NodeItem jarg1_, String jarg2);
  public final static native String NetworkClient_NodeItem_uuid_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_hostaddr_set(long jarg1, NetworkClient.NodeItem jarg1_, String jarg2);
  public final static native String NetworkClient_NodeItem_hostaddr_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_hostname_set(long jarg1, NetworkClient.NodeItem jarg1_, String jarg2);
  public final static native String NetworkClient_NodeItem_hostname_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_node_id_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_node_id_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_version_set(long jarg1, NetworkClient.NodeItem jarg1_, String jarg2);
  public final static native String NetworkClient_NodeItem_version_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_status_set(long jarg1, NetworkClient.NodeItem jarg1_, int jarg2);
  public final static native int NetworkClient_NodeItem_status_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_priority_set(long jarg1, NetworkClient.NodeItem jarg1_, int jarg2);
  public final static native int NetworkClient_NodeItem_priority_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_timeConnected_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_timeConnected_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_timeDisconnected_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_timeDisconnected_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_capability_set(long jarg1, NetworkClient.NodeItem jarg1_, int jarg2);
  public final static native int NetworkClient_NodeItem_capability_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_ramSize_set(long jarg1, NetworkClient.NodeItem jarg1_, double jarg2);
  public final static native double NetworkClient_NodeItem_ramSize_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_gpuMask_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_gpuMask_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_cpuEnable_set(long jarg1, NetworkClient.NodeItem jarg1_, boolean jarg2);
  public final static native boolean NetworkClient_NodeItem_cpuEnable_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_batchId_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_batchId_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_progress_set(long jarg1, NetworkClient.NodeItem jarg1_, double jarg2);
  public final static native double NetworkClient_NodeItem_progress_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_task_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2, NetworkTask jarg2_);
  public final static native long NetworkClient_NodeItem_task_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_errorCount_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_errorCount_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_errorTime_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_errorTime_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_errorBatchId_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2);
  public final static native long NetworkClient_NodeItem_errorBatchId_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_errorMessage_set(long jarg1, NetworkClient.NodeItem jarg1_, String jarg2);
  public final static native String NetworkClient_NodeItem_errorMessage_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native void NetworkClient_NodeItem_resourceUsage_set(long jarg1, NetworkClient.NodeItem jarg1_, long jarg2, NetworkClient.ResourceRecord jarg2_);
  public final static native long NetworkClient_NodeItem_resourceUsage_get(long jarg1, NetworkClient.NodeItem jarg1_);
  public final static native long new_NetworkClient_NodeItem();
  public final static native void delete_NetworkClient_NodeItem(long jarg1);
  public final static native void NetworkClient_BatchList_items_set(long jarg1, NetworkClient.BatchList jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_BatchList_items_get(long jarg1, NetworkClient.BatchList jarg1_);
  public final static native void NetworkClient_BatchList_nextRevision_set(long jarg1, NetworkClient.BatchList jarg1_, long jarg2);
  public final static native long NetworkClient_BatchList_nextRevision_get(long jarg1, NetworkClient.BatchList jarg1_);
  public final static native long new_NetworkClient_BatchList();
  public final static native void delete_NetworkClient_BatchList(long jarg1);
  public final static native void NetworkClient_NodeList_items_set(long jarg1, NetworkClient.NodeList jarg1_, long[] jarg2);
  public final static native long[] NetworkClient_NodeList_items_get(long jarg1, NetworkClient.NodeList jarg1_);
  public final static native void NetworkClient_NodeList_nextRevision_set(long jarg1, NetworkClient.NodeList jarg1_, long jarg2);
  public final static native long NetworkClient_NodeList_nextRevision_get(long jarg1, NetworkClient.NodeList jarg1_);
  public final static native long new_NetworkClient_NodeList();
  public final static native void delete_NetworkClient_NodeList(long jarg1);
  public final static native boolean NetworkClient_connect(long jarg1, NetworkClient jarg1_, String jarg2, int jarg3);
  public final static native void NetworkClient_disconnect(long jarg1, NetworkClient jarg1_);
  public final static native int NetworkClient_createBatch(long jarg1, NetworkClient jarg1_, String jarg2, long[] jarg3, long jarg4, MetaData jarg4_);
  public final static native int NetworkClient_findBatch(long jarg1, NetworkClient jarg1_, String jarg2);
  public final static native void NetworkClient_pauseBatch(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_resumeBatch(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_abortBatch(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_setBatchPriority(long jarg1, NetworkClient jarg1_, int jarg2, int jarg3);
  public final static native void NetworkClient_setBatchNodeLimit(long jarg1, NetworkClient jarg1_, int jarg2, int jarg3);
  public final static native void NetworkClient_pauseNode(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_resumeNode(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_abortNode(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_quitNode(long jarg1, NetworkClient jarg1_, int jarg2);
  public final static native void NetworkClient_setNodePriority(long jarg1, NetworkClient jarg1_, int jarg2, int jarg3);
  public final static native void NetworkClient_setNodeCapability(long jarg1, NetworkClient jarg1_, int jarg2, int jarg3);
  public final static native void NetworkClient_setNodeGPUMask(long jarg1, NetworkClient jarg1_, int jarg2, long jarg3);
  public final static native void NetworkClient_setNodeCPUEnable(long jarg1, NetworkClient jarg1_, int jarg2, boolean jarg3);
  public final static native long NetworkClient_getServerInfo(long jarg1, NetworkClient jarg1_);
  public final static native void NetworkClient_setMasterServer(long jarg1, NetworkClient jarg1_, String jarg2);
  public final static native long NetworkClient_getBatchStatus(long jarg1, NetworkClient jarg1_, int jarg2, long jarg3);
  public final static native long NetworkClient_getNodeStatus(long jarg1, NetworkClient jarg1_, int jarg2, long jarg3);
  public final static native long NetworkClient_getBatchList(long jarg1, NetworkClient jarg1_, long jarg2);
  public final static native long NetworkClient_getNodeList(long jarg1, NetworkClient jarg1_, long jarg2);
  public final static native String NetworkClient_dumpBatches(long jarg1, NetworkClient jarg1_, int[] jarg2);
  public final static native void NetworkClient_loadBatches(long jarg1, NetworkClient jarg1_, String jarg2);
  public final static native void delete_NetworkClient(long jarg1);
}
