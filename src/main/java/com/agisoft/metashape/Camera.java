/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

/**
 * Camera instance.
 */
public class Camera {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public Camera(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Camera obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_Camera(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static long[] cArrayUnwrap(Camera[] arrayWrapper) {
    long[] cArray = new long[arrayWrapper.length];
    for (int i=0; i<arrayWrapper.length; i++)
      cArray[i] = Camera.getCPtr(arrayWrapper[i]);
    return cArray;
  }

  public static Camera[] cArrayWrap(long[] cArray, boolean cMemoryOwn) {
    Camera[] arrayWrapper = new Camera[cArray.length];
    for (int i=0; i<cArray.length; i++)
      arrayWrapper[i] = new Camera(cArray[i], cMemoryOwn);
    return arrayWrapper;
  }

  public Camera(Camera camera) {
    this(MetashapeJNI.new_Camera(Camera.getCPtr(camera), camera), true);
  }

  static public class Reference {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public Reference(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(Reference obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          MetashapeJNI.delete_Camera_Reference(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public Reference(Camera.Reference reference) {
      this(MetashapeJNI.new_Camera_Reference(Camera.Reference.getCPtr(reference), reference), true);
    }
  
    /**
     *  Location enabled flag.
     */
    public void setLocationEnabled(boolean state) {
      MetashapeJNI.Camera_Reference_setLocationEnabled(swigCPtr, this, state);
    }
  
    /**
     *  Location enabled flag.
     */
    public boolean isLocationEnabled() {
      return MetashapeJNI.Camera_Reference_isLocationEnabled(swigCPtr, this);
    }
  
    /**
     *  Rotation enabled flag.
     */
    public void setRotationEnabled(boolean state) {
      MetashapeJNI.Camera_Reference_setRotationEnabled(swigCPtr, this, state);
    }
  
    /**
     *  Rotation enabled flag.
     */
    public boolean isRotationEnabled() {
      return MetashapeJNI.Camera_Reference_isRotationEnabled(swigCPtr, this);
    }
  
    /**
     *  Camera coordinates, may be null.
     */
    public void setLocation(Vector3d location) {
      MetashapeJNI.Camera_Reference_setLocation(swigCPtr, this, location == null ? 0 : Vector3d.getCPtr(location), location);
    }
  
    /**
     *  Camera coordinates, may be null.
     */
    public Vector3d getLocation() {
      long ptr = MetashapeJNI.Camera_Reference_getLocation(swigCPtr, this);
      if (ptr == 0)
          return null;
      return new Vector3d(ptr, true);
    }
  
    /**
     *  Camera rotation angles, may be null.
     */
    public void setRotation(Vector3d rotation) {
      MetashapeJNI.Camera_Reference_setRotation(swigCPtr, this, rotation == null ? 0 : Vector3d.getCPtr(rotation), rotation);
    }
  
    /**
     *  Camera rotation angles, may be null.
     */
    public Vector3d getRotation() {
      long ptr = MetashapeJNI.Camera_Reference_getRotation(swigCPtr, this);
      if (ptr == 0)
          return null;
      return new Vector3d(ptr, true);
    }
  
    /**
     *  Camera location accuracy, may be null.
     */
    public void setLocationAccuracy(Vector3d accuracy) {
      MetashapeJNI.Camera_Reference_setLocationAccuracy(swigCPtr, this, accuracy == null ? 0 : Vector3d.getCPtr(accuracy), accuracy);
    }
  
    /**
     *  Camera location accuracy, may be null.
     */
    public Vector3d getLocationAccuracy() {
      long ptr = MetashapeJNI.Camera_Reference_getLocationAccuracy(swigCPtr, this);
      if (ptr == 0)
          return null;
      return new Vector3d(ptr, true);
    }
  
    /**
     *  Camera rotation accuracy, may be null.
     */
    public void setRotationAccuracy(Vector3d accuracy) {
      MetashapeJNI.Camera_Reference_setRotationAccuracy(swigCPtr, this, accuracy == null ? 0 : Vector3d.getCPtr(accuracy), accuracy);
    }
  
    /**
     *  Camera rotation accuracy, may be null.
     */
    public Vector3d getRotationAccuracy() {
      long ptr = MetashapeJNI.Camera_Reference_getRotationAccuracy(swigCPtr, this);
      if (ptr == 0)
          return null;
      return new Vector3d(ptr, true);
    }
  
  }

  /**
   *  Camera identifier.
   */
  public int getKey() {
    return MetashapeJNI.Camera_getKey(swigCPtr, this);
  }

  /**
   *  Chunk container, may be null.
   */
  public Chunk getChunk() {
    long ptr = MetashapeJNI.Camera_getChunk(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Chunk(ptr, true);
  }

  /**
   *  Camera label.
   */
  public void setLabel(String label) {
    MetashapeJNI.Camera_setLabel(swigCPtr, this, label);
  }

  /**
   *  Camera label.
   */
  public String getLabel() {
    return MetashapeJNI.Camera_getLabel(swigCPtr, this);
  }

  /**
   *  Enables/disables the photo.
   */
  public void setEnabled(boolean state) {
    MetashapeJNI.Camera_setEnabled(swigCPtr, this, state);
  }

  /**
   *  Enables/disables the photo.
   */
  public boolean isEnabled() {
    return MetashapeJNI.Camera_isEnabled(swigCPtr, this);
  }

  /**
   *  Selects/deselects the photo.
   */
  public void setSelected(boolean state) {
    MetashapeJNI.Camera_setSelected(swigCPtr, this, state);
  }

  /**
   *  Selects/deselects the photo.
   */
  public boolean isSelected() {
    return MetashapeJNI.Camera_isSelected(swigCPtr, this);
  }

  /**
   *  Image orientation (1 - normal, 6 - 90 degree, 3 - 180 degree, 8 - 270 degree).
   */
  public void setOrientation(int orientation) {
    MetashapeJNI.Camera_setOrientation(swigCPtr, this, orientation);
  }

  /**
   *  Image orientation (1 - normal, 6 - 90 degree, 3 - 180 degree, 8 - 270 degree).
   */
  public int getOrientation() {
    return MetashapeJNI.Camera_getOrientation(swigCPtr, this);
  }

  /**
   *  Camera sensor, may be null.
   */
  public void setSensor(Sensor sensor) {
    MetashapeJNI.Camera_setSensor(swigCPtr, this, sensor == null ? 0 : Sensor.getCPtr(sensor), sensor);
  }

  /**
   *  Camera sensor, may be null.
   */
  public Sensor getSensor() {
    long ptr = MetashapeJNI.Camera_getSensor(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Sensor(ptr, true);
  }

  /**
   *  Camera group, may be null.
   */
  public void setGroup(CameraGroup group) {
    MetashapeJNI.Camera_setGroup(swigCPtr, this, group == null ? 0 : CameraGroup.getCPtr(group), group);
  }

  /**
   *  Camera group, may be null.
   */
  public CameraGroup getGroup() {
    long ptr = MetashapeJNI.Camera_getGroup(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new CameraGroup(ptr, true);
  }

  /**
   *  Camera photo, may be null.
   */
  public void setPhoto(Photo photo) {
    MetashapeJNI.Camera_setPhoto(swigCPtr, this, photo == null ? 0 : Photo.getCPtr(photo), photo);
  }

  /**
   *  Camera photo, may be null.
   */
  public Photo getPhoto() {
    long ptr = MetashapeJNI.Camera_getPhoto(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Photo(ptr, true);
  }

  /**
   *  4x4 matrix describing photo location in the chunk coordinate system, may be null.
   */
  public void setTransform(Matrix4x4d transform) {
    MetashapeJNI.Camera_setTransform(swigCPtr, this, transform == null ? 0 : Matrix4x4d.getCPtr(transform), transform);
  }

  /**
   *  4x4 matrix describing photo location in the chunk coordinate system, may be null.
   */
  public Matrix4x4d getTransform() {
    long ptr = MetashapeJNI.Camera_getTransform(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Matrix4x4d(ptr, true);
  }

  /**
   *  Camera mask, may be null.
   */
  public void setMask(Image mask) {
    MetashapeJNI.Camera_setMask(swigCPtr, this, mask == null ? 0 : Image.getCPtr(mask), mask);
  }

  /**
   *  Camera mask, may be null.
   */
  public Image getMask() {
    long ptr = MetashapeJNI.Camera_getMask(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Image(ptr, true);
  }

  /**
   *  Camera thumbnail, may be null.
   */
  public void setThumbnail(Image thumbnail) {
    MetashapeJNI.Camera_setThumbnail(swigCPtr, this, thumbnail == null ? 0 : Image.getCPtr(thumbnail), thumbnail);
  }

  /**
   *  Camera thumbnail, may be null.
   */
  public Image getThumbnail() {
    long ptr = MetashapeJNI.Camera_getThumbnail(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Image(ptr, true);
  }

  /**
   *  Camera shutter, may be null.
   */
  public void setShutter(Shutter shutter) {
    MetashapeJNI.Camera_setShutter(swigCPtr, this, shutter == null ? 0 : Shutter.getCPtr(shutter), shutter);
  }

  /**
   *  Camera shutter, may be null.
   */
  public Shutter getShutter() {
    long ptr = MetashapeJNI.Camera_getShutter(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Shutter(ptr, true);
  }

  /**
   *  Vignetting for each band.
   */
  public void setVignetting(Vignetting[] vignetting) {
    MetashapeJNI.Camera_setVignetting(swigCPtr, this, Vignetting.cArrayUnwrap(vignetting));
  }

  /**
   *  Vignetting for each band.
   */
  public Vignetting[] getVignetting() { return Vignetting.cArrayWrap(MetashapeJNI.Camera_getVignetting(swigCPtr, this), true); }

  public Vector3d getCenter() {
    return new Vector3d(MetashapeJNI.Camera_getCenter(swigCPtr, this), true);
  }

  public Vector2d getError(Vector3d pt, Vector2d proj) {
    return new Vector2d(MetashapeJNI.Camera_getError(swigCPtr, this, Vector3d.getCPtr(pt), pt, Vector2d.getCPtr(proj), proj), true);
  }

  public Vector2d project(Vector3d pt) {
    return new Vector2d(MetashapeJNI.Camera_project(swigCPtr, this, Vector3d.getCPtr(pt), pt), true);
  }

  public Vector3d unproject(Vector2d proj) {
    return new Vector3d(MetashapeJNI.Camera_unproject__SWIG_0(swigCPtr, this, Vector2d.getCPtr(proj), proj), true);
  }

  public Vector3d unproject(Vector3d proj) {
    return new Vector3d(MetashapeJNI.Camera_unproject__SWIG_1(swigCPtr, this, Vector3d.getCPtr(proj), proj), true);
  }

  /**
   *  Camera image, may be null.
   */
  public Image loadImage() {
    long ptr = MetashapeJNI.Camera_loadImage(swigCPtr, this);
    if (ptr == 0)
        return null;
    return new Image(ptr, true);
  }

  /**
   *  Camera reference data.
   */
  public Camera.Reference getReference() {
    return new Camera.Reference(MetashapeJNI.Camera_getReference(swigCPtr, this), true);
  }

  /**
   *  Camera reference data.
   */
  public void setReference(Camera.Reference reference) {
    MetashapeJNI.Camera_setReference(swigCPtr, this, Camera.Reference.getCPtr(reference), reference);
  }

  /**
   *  Camera meta data.
   */
  public void setMeta(MetaData meta) {
    MetashapeJNI.Camera_setMeta(swigCPtr, this, MetaData.getCPtr(meta), meta);
  }

  /**
   *  Camera meta data.
   */
  public MetaData getMeta() {
    return new MetaData(MetashapeJNI.Camera_getMeta(swigCPtr, this), true);
  }

}
