/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

import java.lang.AutoCloseable;
import java.util.Optional;
import java.util.Map;

public class Scalebar implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Scalebar(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Scalebar obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_Scalebar(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
    delete();
  }

  static public class Reference {

    private Optional<Double> distance;
    private Optional<Double> distance_accuracy;
    private boolean enabled;

    public Reference() {
      distance = Optional.empty();
      distance_accuracy = Optional.empty();
      enabled = false;
    }

    /**
     *  Enabled flag.
     */
    public void setEnabled(boolean state) {
      enabled = state;
    }

    /**
     *  Enabled flag.
     */
    public boolean isEnabled() {
      return enabled;
    }

    /**
     *  Scale bar length, may be null.
     */
    public void setDistance(Optional<Double> distance) {
      this.distance = distance;
    }

    /**
     *  Scale bar length, may be null.
     */
    public Optional<Double> getDistance() {
      return distance;
    }

    /**
     *  Scale bar length accuracy, may be null.
     */
    public void setDistanceAccuracy(Optional<Double> accuracy) {
      distance_accuracy = accuracy;
    }

    /**
     *  Scale bar length accuracy, may be null.
     */
    public Optional<Double> getDistanceAccuracy() {
      return distance_accuracy;
    }

  }

  public Scalebar(Scalebar scalebar) {
    this(MetashapeJNI.new_Scalebar(Scalebar.getCPtr(scalebar), scalebar), true);
  }

  /**
   *  Scale bar identifier.
   */
  public int getKey() {
    return MetashapeJNI.Scalebar_getKey(swigCPtr, this);
  }

  /**
   *  Chunk container, may be null.
   */
  public Optional<Chunk> getChunk() {
    long ptr = MetashapeJNI.Scalebar_getChunk(swigCPtr, this);
    if (ptr == 0)
        return Optional.empty();
    return Optional.of(new Chunk(ptr, true));
  }

  /**
   *  Scale bar label.
   */
  public void setLabel(String label) {
    MetashapeJNI.Scalebar_setLabel(swigCPtr, this, label);
  }

  /**
   *  Scale bar label.
   */
  public String getLabel() {
    return MetashapeJNI.Scalebar_getLabel(swigCPtr, this);
  }

  /**
   *  Selects/deselects the scale bar.
   */
  public void setSelected(boolean state) {
    MetashapeJNI.Scalebar_setSelected(swigCPtr, this, state);
  }

  /**
   *  Selects/deselects the scale bar.
   */
  public boolean isSelected() {
    return MetashapeJNI.Scalebar_isSelected(swigCPtr, this);
  }

  /**
   *  Scale bar reference data.
   */
  public Scalebar.Reference getReference() { return MetashapeJNI.Scalebar_getReference(swigCPtr, this); }

  /**
   *  Scale bar reference data.
   */
  public void setReference(Scalebar.Reference reference) {
    MetashapeJNI.Scalebar_setReference(swigCPtr, this, reference);
  }

  /**
   *  Scale bar meta data.
   */
  public void setMeta(Map<String,String> meta) {
    MetashapeJNI.Scalebar_setMeta(swigCPtr, this, meta);
  }

  /**
   *  Scale bar meta data.
   */
  public Map<String,String> getMeta() { return MetashapeJNI.Scalebar_getMeta(swigCPtr, this); }

}
