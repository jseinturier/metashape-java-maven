/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class ExportRaster extends Task {
  private transient long swigCPtr;

  protected ExportRaster(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.ExportRaster_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ExportRaster obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_ExportRaster(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ExportRaster() {
    this(TasksJNI.new_ExportRaster(), true);
  }

  /**
   *  Raster block height in pixels. Default: 10000
   */
  public void setBlockHeight(int value) {
    TasksJNI.ExportRaster_setBlockHeight(swigCPtr, this, value);
  }

  /**
   *  Raster block height in pixels. Default: 10000
   */
  public int getBlockHeight() {
    return TasksJNI.ExportRaster_getBlockHeight(swigCPtr, this);
  }

  /**
   *  Raster block width in pixels. Default: 10000
   */
  public void setBlockWidth(int value) {
    TasksJNI.ExportRaster_setBlockWidth(swigCPtr, this, value);
  }

  /**
   *  Raster block width in pixels. Default: 10000
   */
  public int getBlockWidth() {
    return TasksJNI.ExportRaster_getBlockWidth(swigCPtr, this);
  }

  /**
   *  Clip raster to boundary shapes. Default: true
   */
  public void setClipToBoundary(boolean value) {
    TasksJNI.ExportRaster_setClipToBoundary(swigCPtr, this, value);
  }

  /**
   *  Clip raster to boundary shapes. Default: true
   */
  public boolean getClipToBoundary() {
    return TasksJNI.ExportRaster_getClipToBoundary(swigCPtr, this);
  }

  /**
   *  Export description.
   */
  public void setDescription(String value) {
    TasksJNI.ExportRaster_setDescription(swigCPtr, this, value);
  }

  /**
   *  Export description.
   */
  public String getDescription() {
    return TasksJNI.ExportRaster_getDescription(swigCPtr, this);
  }

  /**
   *  Export format. Default: RasterFormat.RasterFormatTiles
   */
  public void setFormat(RasterFormat value) {
    TasksJNI.ExportRaster_setFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Export format. Default: RasterFormat.RasterFormatTiles
   */
  public RasterFormat getFormat() {
    return RasterFormat.class.getEnumConstants()[TasksJNI.ExportRaster_getFormat(swigCPtr, this)];
  }

  /**
   *  Raster height. Default: 0
   */
  public void setHeight(int value) {
    TasksJNI.ExportRaster_setHeight(swigCPtr, this, value);
  }

  /**
   *  Raster height. Default: 0
   */
  public int getHeight() {
    return TasksJNI.ExportRaster_getHeight(swigCPtr, this);
  }

  /**
   *  Image compression parameters.
   */
  public void setImageCompression(ImageCompression value) {
    TasksJNI.ExportRaster_setImageCompression(swigCPtr, this, ImageCompression.getCPtr(value), value);
  }

  /**
   *  Image compression parameters.
   */
  public ImageCompression getImageCompression() {
    return new ImageCompression(TasksJNI.ExportRaster_getImageCompression(swigCPtr, this), true);
  }

  /**
   *  Optional description to be added to image files.
   */
  public void setImageDescription(String value) {
    TasksJNI.ExportRaster_setImageDescription(swigCPtr, this, value);
  }

  /**
   *  Optional description to be added to image files.
   */
  public String getImageDescription() {
    return TasksJNI.ExportRaster_getImageDescription(swigCPtr, this);
  }

  /**
   *  Tile format. Default: ImageFormat.ImageFormatNone
   */
  public void setImageFormat(ImageFormat value) {
    TasksJNI.ExportRaster_setImageFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Tile format. Default: ImageFormat.ImageFormatNone
   */
  public ImageFormat getImageFormat() {
    return ImageFormat.class.getEnumConstants()[TasksJNI.ExportRaster_getImageFormat(swigCPtr, this)];
  }

  /**
   *  Maximum zoom level (Google Map Tiles, MBTiles and World Wind Tiles formats only). Default: -1
   */
  public void setMaxZoomLevel(int value) {
    TasksJNI.ExportRaster_setMaxZoomLevel(swigCPtr, this, value);
  }

  /**
   *  Maximum zoom level (Google Map Tiles, MBTiles and World Wind Tiles formats only). Default: -1
   */
  public int getMaxZoomLevel() {
    return TasksJNI.ExportRaster_getMaxZoomLevel(swigCPtr, this);
  }

  /**
   *  Minimum zoom level (Google Map Tiles, MBTiles and World Wind Tiles formats only). Default: -1
   */
  public void setMinZoomLevel(int value) {
    TasksJNI.ExportRaster_setMinZoomLevel(swigCPtr, this, value);
  }

  /**
   *  Minimum zoom level (Google Map Tiles, MBTiles and World Wind Tiles formats only). Default: -1
   */
  public int getMinZoomLevel() {
    return TasksJNI.ExportRaster_getMinZoomLevel(swigCPtr, this);
  }

  /**
   *  Enable network links generation for KMZ format. Default: true
   */
  public void setNetworkLinks(boolean value) {
    TasksJNI.ExportRaster_setNetworkLinks(swigCPtr, this, value);
  }

  /**
   *  Enable network links generation for KMZ format. Default: true
   */
  public boolean getNetworkLinks() {
    return TasksJNI.ExportRaster_getNetworkLinks(swigCPtr, this);
  }

  /**
   *  No-data value (DEM export only). Default: -32767.0
   */
  public void setNodataValue(double value) {
    TasksJNI.ExportRaster_setNodataValue(swigCPtr, this, value);
  }

  /**
   *  No-data value (DEM export only). Default: -32767.0
   */
  public double getNodataValue() {
    return TasksJNI.ExportRaster_getNodataValue(swigCPtr, this);
  }

  /**
   *  Use north-up orientation for export. Default: true
   */
  public void setNorthUp(boolean value) {
    TasksJNI.ExportRaster_setNorthUp(swigCPtr, this, value);
  }

  /**
   *  Use north-up orientation for export. Default: true
   */
  public boolean getNorthUp() {
    return TasksJNI.ExportRaster_getNorthUp(swigCPtr, this);
  }

  /**
   *  Path to output orthomosaic.
   */
  public void setPath(String value) {
    TasksJNI.ExportRaster_setPath(swigCPtr, this, value);
  }

  /**
   *  Path to output orthomosaic.
   */
  public String getPath() {
    return TasksJNI.ExportRaster_getPath(swigCPtr, this);
  }

  /**
   *  Output projection.
   */
  public void setProjection(OrthoProjection value) {
    TasksJNI.ExportRaster_setProjection(swigCPtr, this, OrthoProjection.getCPtr(value), value);
  }

  /**
   *  Output projection.
   */
  public OrthoProjection getProjection() {
    return new OrthoProjection(TasksJNI.ExportRaster_getProjection(swigCPtr, this), true);
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public void setRasterTransform(RasterTransformType value) {
    TasksJNI.ExportRaster_setRasterTransform(swigCPtr, this, value.ordinal());
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public RasterTransformType getRasterTransform() {
    return RasterTransformType.class.getEnumConstants()[TasksJNI.ExportRaster_getRasterTransform(swigCPtr, this)];
  }

  /**
   *  Region to be exported.
   */
  public void setRegion(BBox2d value) {
    TasksJNI.ExportRaster_setRegion(swigCPtr, this, BBox2d.getCPtr(value), value);
  }

  /**
   *  Region to be exported.
   */
  public BBox2d getRegion() {
    return new BBox2d(TasksJNI.ExportRaster_getRegion(swigCPtr, this), true);
  }

  /**
   *  Output resolution in meters. Default: 0.0
   */
  public void setResolution(double value) {
    TasksJNI.ExportRaster_setResolution(swigCPtr, this, value);
  }

  /**
   *  Output resolution in meters. Default: 0.0
   */
  public double getResolution() {
    return TasksJNI.ExportRaster_getResolution(swigCPtr, this);
  }

  /**
   *  Pixel size in the X dimension in projected units. Default: 0.0
   */
  public void setResolutionX(double value) {
    TasksJNI.ExportRaster_setResolutionX(swigCPtr, this, value);
  }

  /**
   *  Pixel size in the X dimension in projected units. Default: 0.0
   */
  public double getResolutionX() {
    return TasksJNI.ExportRaster_getResolutionX(swigCPtr, this);
  }

  /**
   *  Pixel size in the Y dimension in projected units. Default: 0.0
   */
  public void setResolutionY(double value) {
    TasksJNI.ExportRaster_setResolutionY(swigCPtr, this, value);
  }

  /**
   *  Pixel size in the Y dimension in projected units. Default: 0.0
   */
  public double getResolutionY() {
    return TasksJNI.ExportRaster_getResolutionY(swigCPtr, this);
  }

  /**
   *  Enable alpha channel generation. Default: true
   */
  public void setSaveAlpha(boolean value) {
    TasksJNI.ExportRaster_setSaveAlpha(swigCPtr, this, value);
  }

  /**
   *  Enable alpha channel generation. Default: true
   */
  public boolean getSaveAlpha() {
    return TasksJNI.ExportRaster_getSaveAlpha(swigCPtr, this);
  }

  /**
   *  Enable kml file generation. Default: false
   */
  public void setSaveKml(boolean value) {
    TasksJNI.ExportRaster_setSaveKml(swigCPtr, this, value);
  }

  /**
   *  Enable kml file generation. Default: false
   */
  public boolean getSaveKml() {
    return TasksJNI.ExportRaster_getSaveKml(swigCPtr, this);
  }

  /**
   *  Enable tile scheme files generation. Default: false
   */
  public void setSaveScheme(boolean value) {
    TasksJNI.ExportRaster_setSaveScheme(swigCPtr, this, value);
  }

  /**
   *  Enable tile scheme files generation. Default: false
   */
  public boolean getSaveScheme() {
    return TasksJNI.ExportRaster_getSaveScheme(swigCPtr, this);
  }

  /**
   *  Enable world file generation. Default: false
   */
  public void setSaveWorld(boolean value) {
    TasksJNI.ExportRaster_setSaveWorld(swigCPtr, this, value);
  }

  /**
   *  Enable world file generation. Default: false
   */
  public boolean getSaveWorld() {
    return TasksJNI.ExportRaster_getSaveWorld(swigCPtr, this);
  }

  /**
   *  Selects between DEM and orthomosaic. Default: DataSource.OrthomosaicData
   */
  public void setSourceData(DataSource value) {
    TasksJNI.ExportRaster_setSourceData(swigCPtr, this, value.ordinal());
  }

  /**
   *  Selects between DEM and orthomosaic. Default: DataSource.OrthomosaicData
   */
  public DataSource getSourceData() {
    return DataSource.class.getEnumConstants()[TasksJNI.ExportRaster_getSourceData(swigCPtr, this)];
  }

  /**
   *  Split raster in blocks. Default: false
   */
  public void setSplitInBlocks(boolean value) {
    TasksJNI.ExportRaster_setSplitInBlocks(swigCPtr, this, value);
  }

  /**
   *  Split raster in blocks. Default: false
   */
  public boolean getSplitInBlocks() {
    return TasksJNI.ExportRaster_getSplitInBlocks(swigCPtr, this);
  }

  /**
   *  Tile height in pixels. Default: 256
   */
  public void setTileHeight(int value) {
    TasksJNI.ExportRaster_setTileHeight(swigCPtr, this, value);
  }

  /**
   *  Tile height in pixels. Default: 256
   */
  public int getTileHeight() {
    return TasksJNI.ExportRaster_getTileHeight(swigCPtr, this);
  }

  /**
   *  Tile width in pixels. Default: 256
   */
  public void setTileWidth(int value) {
    TasksJNI.ExportRaster_setTileWidth(swigCPtr, this, value);
  }

  /**
   *  Tile width in pixels. Default: 256
   */
  public int getTileWidth() {
    return TasksJNI.ExportRaster_getTileWidth(swigCPtr, this);
  }

  /**
   *  Export title.
   */
  public void setTitle(String value) {
    TasksJNI.ExportRaster_setTitle(swigCPtr, this, value);
  }

  /**
   *  Export title.
   */
  public String getTitle() {
    return TasksJNI.ExportRaster_getTitle(swigCPtr, this);
  }

  /**
   *  Enable white background. Default: true
   */
  public void setWhiteBackground(boolean value) {
    TasksJNI.ExportRaster_setWhiteBackground(swigCPtr, this, value);
  }

  /**
   *  Enable white background. Default: true
   */
  public boolean getWhiteBackground() {
    return TasksJNI.ExportRaster_getWhiteBackground(swigCPtr, this);
  }

  /**
   *  Raster width. Default: 0
   */
  public void setWidth(int value) {
    TasksJNI.ExportRaster_setWidth(swigCPtr, this, value);
  }

  /**
   *  Raster width. Default: 0
   */
  public int getWidth() {
    return TasksJNI.ExportRaster_getWidth(swigCPtr, this);
  }

  /**
   *  2x3 raster-to-world transformation matrix.
   */
  public void setWorldTransform(Matrix2x3d value) {
    TasksJNI.ExportRaster_setWorldTransform(swigCPtr, this, Matrix2x3d.getCPtr(value), value);
  }

  /**
   *  2x3 raster-to-world transformation matrix.
   */
  public Matrix2x3d getWorldTransform() {
    return new Matrix2x3d(TasksJNI.ExportRaster_getWorldTransform(swigCPtr, this), true);
  }

}
