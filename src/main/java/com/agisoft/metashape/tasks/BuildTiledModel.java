/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class BuildTiledModel extends Task {
  private transient long swigCPtr;

  protected BuildTiledModel(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.BuildTiledModel_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BuildTiledModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_BuildTiledModel(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BuildTiledModel() {
    this(TasksJNI.new_BuildTiledModel(), true);
  }

  /**
   *  List of dense point classes to be used for surface extraction.
   */
  public void setClasses(int[] value) {
    TasksJNI.BuildTiledModel_setClasses(swigCPtr, this, value);
  }

  /**
   *  List of dense point classes to be used for surface extraction.
   */
  public int[] getClasses() { return TasksJNI.BuildTiledModel_getClasses(swigCPtr, this); }

  /**
   *  Number of faces per megapixel of texture resolution. Default: 4000
   */
  public void setFaceCount(int value) {
    TasksJNI.BuildTiledModel_setFaceCount(swigCPtr, this, value);
  }

  /**
   *  Number of faces per megapixel of texture resolution. Default: 4000
   */
  public int getFaceCount() {
    return TasksJNI.BuildTiledModel_getFaceCount(swigCPtr, this);
  }

  /**
   *  Enable ghosting filter. Default: false
   */
  public void setGhostingFilter(boolean value) {
    TasksJNI.BuildTiledModel_setGhostingFilter(swigCPtr, this, value);
  }

  /**
   *  Enable ghosting filter. Default: false
   */
  public boolean getGhostingFilter() {
    return TasksJNI.BuildTiledModel_getGhostingFilter(swigCPtr, this);
  }

  /**
   *  Enable store depth maps option. Default: true
   */
  public void setKeepDepth(boolean value) {
    TasksJNI.BuildTiledModel_setKeepDepth(swigCPtr, this, value);
  }

  /**
   *  Enable store depth maps option. Default: true
   */
  public boolean getKeepDepth() {
    return TasksJNI.BuildTiledModel_getKeepDepth(swigCPtr, this);
  }

  /**
   *  Maximum workgroup size. Default: 100
   */
  public void setMaxWorkgroupSize(int value) {
    TasksJNI.BuildTiledModel_setMaxWorkgroupSize(swigCPtr, this, value);
  }

  /**
   *  Maximum workgroup size. Default: 100
   */
  public int getMaxWorkgroupSize() {
    return TasksJNI.BuildTiledModel_getMaxWorkgroupSize(swigCPtr, this);
  }

  /**
   *  Target model resolution in meters. Default: 0.0
   */
  public void setPixelSize(double value) {
    TasksJNI.BuildTiledModel_setPixelSize(swigCPtr, this, value);
  }

  /**
   *  Target model resolution in meters. Default: 0.0
   */
  public double getPixelSize() {
    return TasksJNI.BuildTiledModel_getPixelSize(swigCPtr, this);
  }

  /**
   *  Selects between dense point cloud and mesh. Default: DataSource.DenseCloudData
   */
  public void setSourceData(DataSource value) {
    TasksJNI.BuildTiledModel_setSourceData(swigCPtr, this, value.ordinal());
  }

  /**
   *  Selects between dense point cloud and mesh. Default: DataSource.DenseCloudData
   */
  public DataSource getSourceData() {
    return DataSource.class.getEnumConstants()[TasksJNI.BuildTiledModel_getSourceData(swigCPtr, this)];
  }

  /**
   *  Enable fine-level task subdivision. Default: true
   */
  public void setSubdivideTask(boolean value) {
    TasksJNI.BuildTiledModel_setSubdivideTask(swigCPtr, this, value);
  }

  /**
   *  Enable fine-level task subdivision. Default: true
   */
  public boolean getSubdivideTask() {
    return TasksJNI.BuildTiledModel_getSubdivideTask(swigCPtr, this);
  }

  /**
   *  Size of tiles in pixels. Default: 256
   */
  public void setTileSize(int value) {
    TasksJNI.BuildTiledModel_setTileSize(swigCPtr, this, value);
  }

  /**
   *  Size of tiles in pixels. Default: 256
   */
  public int getTileSize() {
    return TasksJNI.BuildTiledModel_getTileSize(swigCPtr, this);
  }

  /**
   *  Transfer source model texture to tiled model. Default: false
   */
  public void setTransferTexture(boolean value) {
    TasksJNI.BuildTiledModel_setTransferTexture(swigCPtr, this, value);
  }

  /**
   *  Transfer source model texture to tiled model. Default: false
   */
  public boolean getTransferTexture() {
    return TasksJNI.BuildTiledModel_getTransferTexture(swigCPtr, this);
  }

  /**
   *  Number of cameras in a workitem. Default: 20
   */
  public void setWorkitemSizeCameras(int value) {
    TasksJNI.BuildTiledModel_setWorkitemSizeCameras(swigCPtr, this, value);
  }

  /**
   *  Number of cameras in a workitem. Default: 20
   */
  public int getWorkitemSizeCameras() {
    return TasksJNI.BuildTiledModel_getWorkitemSizeCameras(swigCPtr, this);
  }

}
