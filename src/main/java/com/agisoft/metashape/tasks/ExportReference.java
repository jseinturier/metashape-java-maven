/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class ExportReference extends Task {
  private transient long swigCPtr;

  protected ExportReference(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.ExportReference_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ExportReference obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_ExportReference(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ExportReference() {
    this(TasksJNI.new_ExportReference(), true);
  }

  /**
   *  Column order in csv format (n - label, o - enabled flag, x/y/z - coordinates, X/Y/Z - coordinate accuracy, a/b/c - rotation angles, A/B/C - rotation angle accuracy, u/v/w - estimated coordinates, U/V/W - coordinate errors, d/e/f - estimated orientation angles, D/E/F - orientation errors, p/q/r - estimated coordinates variance, i/j/k - estimated orientation angles variance, [] - group of multiple values, | - column separator within group).
   */
  public void setColumns(String value) {
    TasksJNI.ExportReference_setColumns(swigCPtr, this, value);
  }

  /**
   *  Column order in csv format (n - label, o - enabled flag, x/y/z - coordinates, X/Y/Z - coordinate accuracy, a/b/c - rotation angles, A/B/C - rotation angle accuracy, u/v/w - estimated coordinates, U/V/W - coordinate errors, d/e/f - estimated orientation angles, D/E/F - orientation errors, p/q/r - estimated coordinates variance, i/j/k - estimated orientation angles variance, [] - group of multiple values, | - column separator within group).
   */
  public String getColumns() {
    return TasksJNI.ExportReference_getColumns(swigCPtr, this);
  }

  /**
   *  Column delimiter in csv format.
   */
  public void setDelimiter(String value) {
    TasksJNI.ExportReference_setDelimiter(swigCPtr, this, value);
  }

  /**
   *  Column delimiter in csv format.
   */
  public String getDelimiter() {
    return TasksJNI.ExportReference_getDelimiter(swigCPtr, this);
  }

  /**
   *  Export format. Default: ReferenceFormat.ReferenceFormatNone
   */
  public void setFormat(ReferenceFormat value) {
    TasksJNI.ExportReference_setFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Export format. Default: ReferenceFormat.ReferenceFormatNone
   */
  public ReferenceFormat getFormat() {
    return ReferenceFormat.class.getEnumConstants()[TasksJNI.ExportReference_getFormat(swigCPtr, this)];
  }

  /**
   *  Items to export in CSV format. Default: ReferenceItems.ReferenceItemsCameras
   */
  public void setItems(ReferenceItems value) {
    TasksJNI.ExportReference_setItems(swigCPtr, this, value.ordinal());
  }

  /**
   *  Items to export in CSV format. Default: ReferenceItems.ReferenceItemsCameras
   */
  public ReferenceItems getItems() {
    return ReferenceItems.class.getEnumConstants()[TasksJNI.ExportReference_getItems(swigCPtr, this)];
  }

  /**
   *  Path to the output file.
   */
  public void setPath(String value) {
    TasksJNI.ExportReference_setPath(swigCPtr, this, value);
  }

  /**
   *  Path to the output file.
   */
  public String getPath() {
    return TasksJNI.ExportReference_getPath(swigCPtr, this);
  }

  /**
   *  Number of digits after the decimal point (for CSV format). Default: 6
   */
  public void setPrecision(int value) {
    TasksJNI.ExportReference_setPrecision(swigCPtr, this, value);
  }

  /**
   *  Number of digits after the decimal point (for CSV format). Default: 6
   */
  public int getPrecision() {
    return TasksJNI.ExportReference_getPrecision(swigCPtr, this);
  }

}
