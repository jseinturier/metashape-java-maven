/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class ExportOrthophotos extends Task {
  private transient long swigCPtr;

  protected ExportOrthophotos(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.ExportOrthophotos_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ExportOrthophotos obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_ExportOrthophotos(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ExportOrthophotos() {
    this(TasksJNI.new_ExportOrthophotos(), true);
  }

  /**
   *  List of cameras to process.
   */
  public void setCameras(int[] value) {
    TasksJNI.ExportOrthophotos_setCameras(swigCPtr, this, value);
  }

  /**
   *  List of cameras to process.
   */
  public int[] getCameras() { return TasksJNI.ExportOrthophotos_getCameras(swigCPtr, this); }

  /**
   *  Image compression parameters.
   */
  public void setImageCompression(ImageCompression value) {
    TasksJNI.ExportOrthophotos_setImageCompression(swigCPtr, this, ImageCompression.getCPtr(value), value);
  }

  /**
   *  Image compression parameters.
   */
  public ImageCompression getImageCompression() {
    return new ImageCompression(TasksJNI.ExportOrthophotos_getImageCompression(swigCPtr, this), true);
  }

  /**
   *  Use north-up orientation for export. Default: true
   */
  public void setNorthUp(boolean value) {
    TasksJNI.ExportOrthophotos_setNorthUp(swigCPtr, this, value);
  }

  /**
   *  Use north-up orientation for export. Default: true
   */
  public boolean getNorthUp() {
    return TasksJNI.ExportOrthophotos_getNorthUp(swigCPtr, this);
  }

  /**
   *  Path to output orthophoto.
   */
  public void setPath(String value) {
    TasksJNI.ExportOrthophotos_setPath(swigCPtr, this, value);
  }

  /**
   *  Path to output orthophoto.
   */
  public String getPath() {
    return TasksJNI.ExportOrthophotos_getPath(swigCPtr, this);
  }

  /**
   *  Output projection.
   */
  public void setProjection(OrthoProjection value) {
    TasksJNI.ExportOrthophotos_setProjection(swigCPtr, this, OrthoProjection.getCPtr(value), value);
  }

  /**
   *  Output projection.
   */
  public OrthoProjection getProjection() {
    return new OrthoProjection(TasksJNI.ExportOrthophotos_getProjection(swigCPtr, this), true);
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public void setRasterTransform(RasterTransformType value) {
    TasksJNI.ExportOrthophotos_setRasterTransform(swigCPtr, this, value.ordinal());
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public RasterTransformType getRasterTransform() {
    return RasterTransformType.class.getEnumConstants()[TasksJNI.ExportOrthophotos_getRasterTransform(swigCPtr, this)];
  }

  /**
   *  Region to be exported.
   */
  public void setRegion(BBox2d value) {
    TasksJNI.ExportOrthophotos_setRegion(swigCPtr, this, BBox2d.getCPtr(value), value);
  }

  /**
   *  Region to be exported.
   */
  public BBox2d getRegion() {
    return new BBox2d(TasksJNI.ExportOrthophotos_getRegion(swigCPtr, this), true);
  }

  /**
   *  Output resolution in meters. Default: 0.0
   */
  public void setResolution(double value) {
    TasksJNI.ExportOrthophotos_setResolution(swigCPtr, this, value);
  }

  /**
   *  Output resolution in meters. Default: 0.0
   */
  public double getResolution() {
    return TasksJNI.ExportOrthophotos_getResolution(swigCPtr, this);
  }

  /**
   *  Pixel size in the X dimension in projected units. Default: 0.0
   */
  public void setResolutionX(double value) {
    TasksJNI.ExportOrthophotos_setResolutionX(swigCPtr, this, value);
  }

  /**
   *  Pixel size in the X dimension in projected units. Default: 0.0
   */
  public double getResolutionX() {
    return TasksJNI.ExportOrthophotos_getResolutionX(swigCPtr, this);
  }

  /**
   *  Pixel size in the Y dimension in projected units. Default: 0.0
   */
  public void setResolutionY(double value) {
    TasksJNI.ExportOrthophotos_setResolutionY(swigCPtr, this, value);
  }

  /**
   *  Pixel size in the Y dimension in projected units. Default: 0.0
   */
  public double getResolutionY() {
    return TasksJNI.ExportOrthophotos_getResolutionY(swigCPtr, this);
  }

  /**
   *  Enable alpha channel generation. Default: true
   */
  public void setSaveAlpha(boolean value) {
    TasksJNI.ExportOrthophotos_setSaveAlpha(swigCPtr, this, value);
  }

  /**
   *  Enable alpha channel generation. Default: true
   */
  public boolean getSaveAlpha() {
    return TasksJNI.ExportOrthophotos_getSaveAlpha(swigCPtr, this);
  }

  /**
   *  Enable kml file generation. Default: false
   */
  public void setSaveKml(boolean value) {
    TasksJNI.ExportOrthophotos_setSaveKml(swigCPtr, this, value);
  }

  /**
   *  Enable kml file generation. Default: false
   */
  public boolean getSaveKml() {
    return TasksJNI.ExportOrthophotos_getSaveKml(swigCPtr, this);
  }

  /**
   *  Enable world file generation. Default: false
   */
  public void setSaveWorld(boolean value) {
    TasksJNI.ExportOrthophotos_setSaveWorld(swigCPtr, this, value);
  }

  /**
   *  Enable world file generation. Default: false
   */
  public boolean getSaveWorld() {
    return TasksJNI.ExportOrthophotos_getSaveWorld(swigCPtr, this);
  }

  /**
   *  Enable white background. Default: true
   */
  public void setWhiteBackground(boolean value) {
    TasksJNI.ExportOrthophotos_setWhiteBackground(swigCPtr, this, value);
  }

  /**
   *  Enable white background. Default: true
   */
  public boolean getWhiteBackground() {
    return TasksJNI.ExportOrthophotos_getWhiteBackground(swigCPtr, this);
  }

}
