/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class BuildTexture extends Task {
  private transient long swigCPtr;

  protected BuildTexture(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.BuildTexture_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BuildTexture obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_BuildTexture(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BuildTexture() {
    this(TasksJNI.new_BuildTexture(), true);
  }

  /**
   *  Texture blending mode. Default: BlendingMode.MosaicBlending
   */
  public void setBlendingMode(BlendingMode value) {
    TasksJNI.BuildTexture_setBlendingMode(swigCPtr, this, value.ordinal());
  }

  /**
   *  Texture blending mode. Default: BlendingMode.MosaicBlending
   */
  public BlendingMode getBlendingMode() {
    return BlendingMode.class.getEnumConstants()[TasksJNI.BuildTexture_getBlendingMode(swigCPtr, this)];
  }

  /**
   *  A list of cameras to be used for texturing.
   */
  public void setCameras(int[] value) {
    TasksJNI.BuildTexture_setCameras(swigCPtr, this, value);
  }

  /**
   *  A list of cameras to be used for texturing.
   */
  public int[] getCameras() { return TasksJNI.BuildTexture_getCameras(swigCPtr, this); }

  /**
   *  Enable hole filling. Default: true
   */
  public void setFillHoles(boolean value) {
    TasksJNI.BuildTexture_setFillHoles(swigCPtr, this, value);
  }

  /**
   *  Enable hole filling. Default: true
   */
  public boolean getFillHoles() {
    return TasksJNI.BuildTexture_getFillHoles(swigCPtr, this);
  }

  /**
   *  Enable ghosting filter. Default: true
   */
  public void setGhostingFilter(boolean value) {
    TasksJNI.BuildTexture_setGhostingFilter(swigCPtr, this, value);
  }

  /**
   *  Enable ghosting filter. Default: true
   */
  public boolean getGhostingFilter() {
    return TasksJNI.BuildTexture_getGhostingFilter(swigCPtr, this);
  }

  /**
   *  Source model. Default: -1
   */
  public void setSourceModel(int value) {
    TasksJNI.BuildTexture_setSourceModel(swigCPtr, this, value);
  }

  /**
   *  Source model. Default: -1
   */
  public int getSourceModel() {
    return TasksJNI.BuildTexture_getSourceModel(swigCPtr, this);
  }

  /**
   *  Texture page size. Default: 4096
   */
  public void setTextureSize(int value) {
    TasksJNI.BuildTexture_setTextureSize(swigCPtr, this, value);
  }

  /**
   *  Texture page size. Default: 4096
   */
  public int getTextureSize() {
    return TasksJNI.BuildTexture_getTextureSize(swigCPtr, this);
  }

  /**
   *  Texture type. Default: Model.TextureType.DiffuseMap
   */
  public void setTextureType(Model.TextureType value) {
    TasksJNI.BuildTexture_setTextureType(swigCPtr, this, value.ordinal());
  }

  /**
   *  Texture type. Default: Model.TextureType.DiffuseMap
   */
  public Model.TextureType getTextureType() {
    return Model.TextureType.class.getEnumConstants()[TasksJNI.BuildTexture_getTextureType(swigCPtr, this)];
  }

  /**
   *  Transfer texture. Default: true
   */
  public void setTransferTexture(boolean value) {
    TasksJNI.BuildTexture_setTransferTexture(swigCPtr, this, value);
  }

  /**
   *  Transfer texture. Default: true
   */
  public boolean getTransferTexture() {
    return TasksJNI.BuildTexture_getTransferTexture(swigCPtr, this);
  }

}
