/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class ExportModel extends Task {
  private transient long swigCPtr;

  protected ExportModel(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.ExportModel_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ExportModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_ExportModel(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ExportModel() {
    this(TasksJNI.new_ExportModel(), true);
  }

  /**
   *  Enables/disables binary encoding (if supported by format). Default: true
   */
  public void setBinary(boolean value) {
    TasksJNI.ExportModel_setBinary(swigCPtr, this, value);
  }

  /**
   *  Enables/disables binary encoding (if supported by format). Default: true
   */
  public boolean getBinary() {
    return TasksJNI.ExportModel_getBinary(swigCPtr, this);
  }

  /**
   *  Clip model to boundary shapes. Default: true
   */
  public void setClipToBoundary(boolean value) {
    TasksJNI.ExportModel_setClipToBoundary(swigCPtr, this, value);
  }

  /**
   *  Clip model to boundary shapes. Default: true
   */
  public boolean getClipToBoundary() {
    return TasksJNI.ExportModel_getClipToBoundary(swigCPtr, this);
  }

  /**
   *  Convert colors to 8 bit RGB. Default: true
   */
  public void setColorsRgb8Bit(boolean value) {
    TasksJNI.ExportModel_setColorsRgb8Bit(swigCPtr, this, value);
  }

  /**
   *  Convert colors to 8 bit RGB. Default: true
   */
  public boolean getColorsRgb8Bit() {
    return TasksJNI.ExportModel_getColorsRgb8Bit(swigCPtr, this);
  }

  /**
   *  Optional comment (if supported by selected format).
   */
  public void setComment(String value) {
    TasksJNI.ExportModel_setComment(swigCPtr, this, value);
  }

  /**
   *  Optional comment (if supported by selected format).
   */
  public String getComment() {
    return TasksJNI.ExportModel_getComment(swigCPtr, this);
  }

  /**
   *  Output coordinate system.
   */
  public void setCRS(CoordinateSystem value) {
    TasksJNI.ExportModel_setCRS(swigCPtr, this, CoordinateSystem.getCPtr(value), value);
  }

  /**
   *  Output coordinate system.
   */
  public CoordinateSystem getCRS() {
    return new CoordinateSystem(TasksJNI.ExportModel_getCRS(swigCPtr, this), true);
  }

  /**
   *  Embeds texture inside the model file (if supported by format). Default: false
   */
  public void setEmbedTexture(boolean value) {
    TasksJNI.ExportModel_setEmbedTexture(swigCPtr, this, value);
  }

  /**
   *  Embeds texture inside the model file (if supported by format). Default: false
   */
  public boolean getEmbedTexture() {
    return TasksJNI.ExportModel_getEmbedTexture(swigCPtr, this);
  }

  /**
   *  Export format. Default: ModelFormat.ModelFormatNone
   */
  public void setFormat(ModelFormat value) {
    TasksJNI.ExportModel_setFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Export format. Default: ModelFormat.ModelFormatNone
   */
  public ModelFormat getFormat() {
    return ModelFormat.class.getEnumConstants()[TasksJNI.ExportModel_getFormat(swigCPtr, this)];
  }

  /**
   *  Path to output model.
   */
  public void setPath(String value) {
    TasksJNI.ExportModel_setPath(swigCPtr, this, value);
  }

  /**
   *  Path to output model.
   */
  public String getPath() {
    return TasksJNI.ExportModel_getPath(swigCPtr, this);
  }

  /**
   *  Number of digits after the decimal point (for text formats). Default: 6
   */
  public void setPrecision(int value) {
    TasksJNI.ExportModel_setPrecision(swigCPtr, this, value);
  }

  /**
   *  Number of digits after the decimal point (for text formats). Default: 6
   */
  public int getPrecision() {
    return TasksJNI.ExportModel_getPrecision(swigCPtr, this);
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public void setRasterTransform(RasterTransformType value) {
    TasksJNI.ExportModel_setRasterTransform(swigCPtr, this, value.ordinal());
  }

  /**
   *  Raster band transformation. Default: RasterTransformType.RasterTransformNone
   */
  public RasterTransformType getRasterTransform() {
    return RasterTransformType.class.getEnumConstants()[TasksJNI.ExportModel_getRasterTransform(swigCPtr, this)];
  }

  /**
   *  Enables/disables alpha channel export. Default: false
   */
  public void setSaveAlpha(boolean value) {
    TasksJNI.ExportModel_setSaveAlpha(swigCPtr, this, value);
  }

  /**
   *  Enables/disables alpha channel export. Default: false
   */
  public boolean getSaveAlpha() {
    return TasksJNI.ExportModel_getSaveAlpha(swigCPtr, this);
  }

  /**
   *  Enables/disables camera export. Default: true
   */
  public void setSaveCameras(boolean value) {
    TasksJNI.ExportModel_setSaveCameras(swigCPtr, this, value);
  }

  /**
   *  Enables/disables camera export. Default: true
   */
  public boolean getSaveCameras() {
    return TasksJNI.ExportModel_getSaveCameras(swigCPtr, this);
  }

  /**
   *  Enables/disables export of vertex colors. Default: true
   */
  public void setSaveColors(boolean value) {
    TasksJNI.ExportModel_setSaveColors(swigCPtr, this, value);
  }

  /**
   *  Enables/disables export of vertex colors. Default: true
   */
  public boolean getSaveColors() {
    return TasksJNI.ExportModel_getSaveColors(swigCPtr, this);
  }

  /**
   *  Enables/disables comment export. Default: true
   */
  public void setSaveComment(boolean value) {
    TasksJNI.ExportModel_setSaveComment(swigCPtr, this, value);
  }

  /**
   *  Enables/disables comment export. Default: true
   */
  public boolean getSaveComment() {
    return TasksJNI.ExportModel_getSaveComment(swigCPtr, this);
  }

  /**
   *  Enables/disables export of vertex confidence. Default: false
   */
  public void setSaveConfidence(boolean value) {
    TasksJNI.ExportModel_setSaveConfidence(swigCPtr, this, value);
  }

  /**
   *  Enables/disables export of vertex confidence. Default: false
   */
  public boolean getSaveConfidence() {
    return TasksJNI.ExportModel_getSaveConfidence(swigCPtr, this);
  }

  /**
   *  Enables/disables marker export. Default: true
   */
  public void setSaveMarkers(boolean value) {
    TasksJNI.ExportModel_setSaveMarkers(swigCPtr, this, value);
  }

  /**
   *  Enables/disables marker export. Default: true
   */
  public boolean getSaveMarkers() {
    return TasksJNI.ExportModel_getSaveMarkers(swigCPtr, this);
  }

  /**
   *  Enables/disables export of vertex normals. Default: true
   */
  public void setSaveNormals(boolean value) {
    TasksJNI.ExportModel_setSaveNormals(swigCPtr, this, value);
  }

  /**
   *  Enables/disables export of vertex normals. Default: true
   */
  public boolean getSaveNormals() {
    return TasksJNI.ExportModel_getSaveNormals(swigCPtr, this);
  }

  /**
   *  Enables/disables texture export. Default: true
   */
  public void setSaveTexture(boolean value) {
    TasksJNI.ExportModel_setSaveTexture(swigCPtr, this, value);
  }

  /**
   *  Enables/disables texture export. Default: true
   */
  public boolean getSaveTexture() {
    return TasksJNI.ExportModel_getSaveTexture(swigCPtr, this);
  }

  /**
   *  Enables/disables UDIM texture layout. Default: false
   */
  public void setSaveUdim(boolean value) {
    TasksJNI.ExportModel_setSaveUdim(swigCPtr, this, value);
  }

  /**
   *  Enables/disables UDIM texture layout. Default: false
   */
  public boolean getSaveUdim() {
    return TasksJNI.ExportModel_getSaveUdim(swigCPtr, this);
  }

  /**
   *  Enables/disables uv coordinates export. Default: true
   */
  public void setSaveUv(boolean value) {
    TasksJNI.ExportModel_setSaveUv(swigCPtr, this, value);
  }

  /**
   *  Enables/disables uv coordinates export. Default: true
   */
  public boolean getSaveUv() {
    return TasksJNI.ExportModel_getSaveUv(swigCPtr, this);
  }

  /**
   *  Optional shift to be applied to vertex coordinates.
   */
  public void setShift(Vector3d value) {
    TasksJNI.ExportModel_setShift(swigCPtr, this, Vector3d.getCPtr(value), value);
  }

  /**
   *  Optional shift to be applied to vertex coordinates.
   */
  public Vector3d getShift() {
    return new Vector3d(TasksJNI.ExportModel_getShift(swigCPtr, this), true);
  }

  /**
   *  Strips camera label extensions during export. Default: false
   */
  public void setStripExtensions(boolean value) {
    TasksJNI.ExportModel_setStripExtensions(swigCPtr, this, value);
  }

  /**
   *  Strips camera label extensions during export. Default: false
   */
  public boolean getStripExtensions() {
    return TasksJNI.ExportModel_getStripExtensions(swigCPtr, this);
  }

  /**
   *  Texture format. Default: ImageFormat.ImageFormatJPEG
   */
  public void setTextureFormat(ImageFormat value) {
    TasksJNI.ExportModel_setTextureFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Texture format. Default: ImageFormat.ImageFormatJPEG
   */
  public ImageFormat getTextureFormat() {
    return ImageFormat.class.getEnumConstants()[TasksJNI.ExportModel_getTextureFormat(swigCPtr, this)];
  }

  /**
   *  Default view.
   */
  public void setViewpoint(Viewpoint value) {
    TasksJNI.ExportModel_setViewpoint(swigCPtr, this, Viewpoint.getCPtr(value), value);
  }

  /**
   *  Default view.
   */
  public Viewpoint getViewpoint() {
    return new Viewpoint(TasksJNI.ExportModel_getViewpoint(swigCPtr, this), true);
  }

}
