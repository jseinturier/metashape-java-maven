/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class AddPhotos extends Task {
  private transient long swigCPtr;

  protected AddPhotos(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.AddPhotos_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AddPhotos obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_AddPhotos(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public AddPhotos() {
    this(TasksJNI.new_AddPhotos(), true);
  }

  /**
   *  List of file groups.
   */
  public void setFilegroups(int[] value) {
    TasksJNI.AddPhotos_setFilegroups(swigCPtr, this, value);
  }

  /**
   *  List of file groups.
   */
  public int[] getFilegroups() { return TasksJNI.AddPhotos_getFilegroups(swigCPtr, this); }

  /**
   *  List of files to add.
   */
  public void setFilenames(String[] value) {
    TasksJNI.AddPhotos_setFilenames(swigCPtr, this, value);
  }

  /**
   *  List of files to add.
   */
  public String[] getFilenames() { return TasksJNI.AddPhotos_getFilenames(swigCPtr, this); }

  /**
   *  Camera group key. Default: -1
   */
  public void setGroup(int value) {
    TasksJNI.AddPhotos_setGroup(swigCPtr, this, value);
  }

  /**
   *  Camera group key. Default: -1
   */
  public int getGroup() {
    return TasksJNI.AddPhotos_getGroup(swigCPtr, this);
  }

  /**
   *  Image layout. Default: ImageLayout.UndefinedLayout
   */
  public void setLayout(ImageLayout value) {
    TasksJNI.AddPhotos_setLayout(swigCPtr, this, value.ordinal());
  }

  /**
   *  Image layout. Default: ImageLayout.UndefinedLayout
   */
  public ImageLayout getLayout() {
    return ImageLayout.class.getEnumConstants()[TasksJNI.AddPhotos_getLayout(swigCPtr, this)];
  }

  /**
   *  Load reference coordinates. Default: true
   */
  public void setLoadReference(boolean value) {
    TasksJNI.AddPhotos_setLoadReference(swigCPtr, this, value);
  }

  /**
   *  Load reference coordinates. Default: true
   */
  public boolean getLoadReference() {
    return TasksJNI.AddPhotos_getLoadReference(swigCPtr, this);
  }

  /**
   *  Load satellite RPC data from auxiliary TXT files. Default: false
   */
  public void setLoadRpcTxt(boolean value) {
    TasksJNI.AddPhotos_setLoadRpcTxt(swigCPtr, this, value);
  }

  /**
   *  Load satellite RPC data from auxiliary TXT files. Default: false
   */
  public boolean getLoadRpcTxt() {
    return TasksJNI.AddPhotos_getLoadRpcTxt(swigCPtr, this);
  }

  /**
   *  Load accuracy from XMP meta data. Default: false
   */
  public void setLoadXmpAccuracy(boolean value) {
    TasksJNI.AddPhotos_setLoadXmpAccuracy(swigCPtr, this, value);
  }

  /**
   *  Load accuracy from XMP meta data. Default: false
   */
  public boolean getLoadXmpAccuracy() {
    return TasksJNI.AddPhotos_getLoadXmpAccuracy(swigCPtr, this);
  }

  /**
   *  Load GPS/INS offset from XMP meta data. Default: true
   */
  public void setLoadXmpAntenna(boolean value) {
    TasksJNI.AddPhotos_setLoadXmpAntenna(swigCPtr, this, value);
  }

  /**
   *  Load GPS/INS offset from XMP meta data. Default: true
   */
  public boolean getLoadXmpAntenna() {
    return TasksJNI.AddPhotos_getLoadXmpAntenna(swigCPtr, this);
  }

  /**
   *  Load calibration from XMP meta data. Default: true
   */
  public void setLoadXmpCalibration(boolean value) {
    TasksJNI.AddPhotos_setLoadXmpCalibration(swigCPtr, this, value);
  }

  /**
   *  Load calibration from XMP meta data. Default: true
   */
  public boolean getLoadXmpCalibration() {
    return TasksJNI.AddPhotos_getLoadXmpCalibration(swigCPtr, this);
  }

  /**
   *  Load orientation from XMP meta data. Default: true
   */
  public void setLoadXmpOrientation(boolean value) {
    TasksJNI.AddPhotos_setLoadXmpOrientation(swigCPtr, this, value);
  }

  /**
   *  Load orientation from XMP meta data. Default: true
   */
  public boolean getLoadXmpOrientation() {
    return TasksJNI.AddPhotos_getLoadXmpOrientation(swigCPtr, this);
  }

  /**
   *  Strip file extensions from camera labels. Default: true
   */
  public void setStripExtensions(boolean value) {
    TasksJNI.AddPhotos_setStripExtensions(swigCPtr, this, value);
  }

  /**
   *  Strip file extensions from camera labels. Default: true
   */
  public boolean getStripExtensions() {
    return TasksJNI.AddPhotos_getStripExtensions(swigCPtr, this);
  }

}
