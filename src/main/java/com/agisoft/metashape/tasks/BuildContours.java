/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class BuildContours extends Task {
  private transient long swigCPtr;

  protected BuildContours(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.BuildContours_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BuildContours obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_BuildContours(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BuildContours() {
    this(TasksJNI.new_BuildContours(), true);
  }

  /**
   *  Contour interval. Default: 1.0
   */
  public void setInterval(double value) {
    TasksJNI.BuildContours_setInterval(swigCPtr, this, value);
  }

  /**
   *  Contour interval. Default: 1.0
   */
  public double getInterval() {
    return TasksJNI.BuildContours_getInterval(swigCPtr, this);
  }

  /**
   *  Maximum value of contour range. Default: 10000000000.0
   */
  public void setMaxValue(double value) {
    TasksJNI.BuildContours_setMaxValue(swigCPtr, this, value);
  }

  /**
   *  Maximum value of contour range. Default: 10000000000.0
   */
  public double getMaxValue() {
    return TasksJNI.BuildContours_getMaxValue(swigCPtr, this);
  }

  /**
   *  Minimum value of contour range. Default: -10000000000.0
   */
  public void setMinValue(double value) {
    TasksJNI.BuildContours_setMinValue(swigCPtr, this, value);
  }

  /**
   *  Minimum value of contour range. Default: -10000000000.0
   */
  public double getMinValue() {
    return TasksJNI.BuildContours_getMinValue(swigCPtr, this);
  }

  /**
   *  Prevent contour intersections. Default: false
   */
  public void setPreventIntersections(boolean value) {
    TasksJNI.BuildContours_setPreventIntersections(swigCPtr, this, value);
  }

  /**
   *  Prevent contour intersections. Default: false
   */
  public boolean getPreventIntersections() {
    return TasksJNI.BuildContours_getPreventIntersections(swigCPtr, this);
  }

  /**
   *  Source data for contour generation. Default: DataSource.ElevationData
   */
  public void setSourceData(DataSource value) {
    TasksJNI.BuildContours_setSourceData(swigCPtr, this, value.ordinal());
  }

  /**
   *  Source data for contour generation. Default: DataSource.ElevationData
   */
  public DataSource getSourceData() {
    return DataSource.class.getEnumConstants()[TasksJNI.BuildContours_getSourceData(swigCPtr, this)];
  }

}
