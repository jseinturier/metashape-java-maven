/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class GeneratePrescriptionMap extends Task {
  private transient long swigCPtr;

  protected GeneratePrescriptionMap(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.GeneratePrescriptionMap_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GeneratePrescriptionMap obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_GeneratePrescriptionMap(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GeneratePrescriptionMap() {
    this(TasksJNI.new_GeneratePrescriptionMap(), true);
  }

  /**
   *  Boundary shape group. Default: -1
   */
  public void setBoundary(int value) {
    TasksJNI.GeneratePrescriptionMap_setBoundary(swigCPtr, this, value);
  }

  /**
   *  Boundary shape group. Default: -1
   */
  public int getBoundary() {
    return TasksJNI.GeneratePrescriptionMap_getBoundary(swigCPtr, this);
  }

  /**
   *  Step of prescription grid, meters. Default: 1.0
   */
  public void setCellSize(double value) {
    TasksJNI.GeneratePrescriptionMap_setCellSize(swigCPtr, this, value);
  }

  /**
   *  Step of prescription grid, meters. Default: 1.0
   */
  public double getCellSize() {
    return TasksJNI.GeneratePrescriptionMap_getCellSize(swigCPtr, this);
  }

  /**
   *  Number of clusters. Default: 4
   */
  public void setClusterCount(int value) {
    TasksJNI.GeneratePrescriptionMap_setClusterCount(swigCPtr, this, value);
  }

  /**
   *  Number of clusters. Default: 4
   */
  public int getClusterCount() {
    return TasksJNI.GeneratePrescriptionMap_getClusterCount(swigCPtr, this);
  }

  /**
   *  Index values clustering method. Default: ClusteringMethod.ClusteringMethodJenksNaturalBreaks
   */
  public void setClusteringMethod(ClusteringMethod value) {
    TasksJNI.GeneratePrescriptionMap_setClusteringMethod(swigCPtr, this, value.ordinal());
  }

  /**
   *  Index values clustering method. Default: ClusteringMethod.ClusteringMethodJenksNaturalBreaks
   */
  public ClusteringMethod getClusteringMethod() {
    return ClusteringMethod.class.getEnumConstants()[TasksJNI.GeneratePrescriptionMap_getClusteringMethod(swigCPtr, this)];
  }

  /**
   *  Grid azimuth, degrees. Default: 0.0
   */
  public void setGridAzimuth(double value) {
    TasksJNI.GeneratePrescriptionMap_setGridAzimuth(swigCPtr, this, value);
  }

  /**
   *  Grid azimuth, degrees. Default: 0.0
   */
  public double getGridAzimuth() {
    return TasksJNI.GeneratePrescriptionMap_getGridAzimuth(swigCPtr, this);
  }

  /**
   *  Maximum value of index range. Default: 1.0
   */
  public void setMaxValue(double value) {
    TasksJNI.GeneratePrescriptionMap_setMaxValue(swigCPtr, this, value);
  }

  /**
   *  Maximum value of index range. Default: 1.0
   */
  public double getMaxValue() {
    return TasksJNI.GeneratePrescriptionMap_getMaxValue(swigCPtr, this);
  }

  /**
   *  Minimum value of index range. Default: 0.0
   */
  public void setMinValue(double value) {
    TasksJNI.GeneratePrescriptionMap_setMinValue(swigCPtr, this, value);
  }

  /**
   *  Minimum value of index range. Default: 0.0
   */
  public double getMinValue() {
    return TasksJNI.GeneratePrescriptionMap_getMinValue(swigCPtr, this);
  }

}
