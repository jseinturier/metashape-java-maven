/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class GeneratePrescriptionMap extends Task {
  private transient long swigCPtr;

  protected GeneratePrescriptionMap(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.GeneratePrescriptionMap_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GeneratePrescriptionMap obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_GeneratePrescriptionMap(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GeneratePrescriptionMap() {
    this(TasksJNI.new_GeneratePrescriptionMap(), true);
  }

  /**
   *  Boundary shape group. Default: -1
   */
  public void setBoundaryShapeGroup(int value) {
    TasksJNI.GeneratePrescriptionMap_setBoundaryShapeGroup(swigCPtr, this, value);
  }

  /**
   *  Boundary shape group. Default: -1
   */
  public int getBoundaryShapeGroup() {
    return TasksJNI.GeneratePrescriptionMap_getBoundaryShapeGroup(swigCPtr, this);
  }

  /**
   *  Classification breakpoints.
   */
  public void setBreakpoints(double[] value) {
    TasksJNI.GeneratePrescriptionMap_setBreakpoints(swigCPtr, this, value);
  }

  /**
   *  Classification breakpoints.
   */
  public double[] getBreakpoints() { return TasksJNI.GeneratePrescriptionMap_getBreakpoints(swigCPtr, this); }

  /**
   *  Step of prescription grid, meters. Default: 1.0
   */
  public void setCellSize(double value) {
    TasksJNI.GeneratePrescriptionMap_setCellSize(swigCPtr, this, value);
  }

  /**
   *  Step of prescription grid, meters. Default: 1.0
   */
  public double getCellSize() {
    return TasksJNI.GeneratePrescriptionMap_getCellSize(swigCPtr, this);
  }

  /**
   *  Number of classes. Default: 4
   */
  public void setClassCount(int value) {
    TasksJNI.GeneratePrescriptionMap_setClassCount(swigCPtr, this, value);
  }

  /**
   *  Number of classes. Default: 4
   */
  public int getClassCount() {
    return TasksJNI.GeneratePrescriptionMap_getClassCount(swigCPtr, this);
  }

  /**
   *  Index values classification method. Default: ClassificationMethod.JenksNaturalBreaksClassification
   */
  public void setClassificationMethod(ClassificationMethod value) {
    TasksJNI.GeneratePrescriptionMap_setClassificationMethod(swigCPtr, this, value.ordinal());
  }

  /**
   *  Index values classification method. Default: ClassificationMethod.JenksNaturalBreaksClassification
   */
  public ClassificationMethod getClassificationMethod() {
    return ClassificationMethod.class.getEnumConstants()[TasksJNI.GeneratePrescriptionMap_getClassificationMethod(swigCPtr, this)];
  }

  /**
   *  Fertilizer rate for each class.
   */
  public void setRates(double[] value) {
    TasksJNI.GeneratePrescriptionMap_setRates(swigCPtr, this, value);
  }

  /**
   *  Fertilizer rate for each class.
   */
  public double[] getRates() { return TasksJNI.GeneratePrescriptionMap_getRates(swigCPtr, this); }

}
