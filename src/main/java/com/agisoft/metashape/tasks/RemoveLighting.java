/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class RemoveLighting extends Task {
  private transient long swigCPtr;

  protected RemoveLighting(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.RemoveLighting_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RemoveLighting obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_RemoveLighting(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RemoveLighting() {
    this(TasksJNI.new_RemoveLighting(), true);
  }

  /**
   *  Ambient occlusion multiplier. Should be in range [0.25, 4]. Default: 1.5
   */
  public void setAmbientOcclusionMultiplier(double value) {
    TasksJNI.RemoveLighting_setAmbientOcclusionMultiplier(swigCPtr, this, value);
  }

  /**
   *  Ambient occlusion multiplier. Should be in range [0.25, 4]. Default: 1.5
   */
  public double getAmbientOcclusionMultiplier() {
    return TasksJNI.RemoveLighting_getAmbientOcclusionMultiplier(swigCPtr, this);
  }

  /**
   *  Path to ambient occlusion texture atlas. Can be empty.
   */
  public void setAmbientOcclusionPath(String value) {
    TasksJNI.RemoveLighting_setAmbientOcclusionPath(swigCPtr, this, value);
  }

  /**
   *  Path to ambient occlusion texture atlas. Can be empty.
   */
  public String getAmbientOcclusionPath() {
    return TasksJNI.RemoveLighting_getAmbientOcclusionPath(swigCPtr, this);
  }

  /**
   *  Enable multi-color processing mode. Default: false
   */
  public void setColorMode(boolean value) {
    TasksJNI.RemoveLighting_setColorMode(swigCPtr, this, value);
  }

  /**
   *  Enable multi-color processing mode. Default: false
   */
  public boolean getColorMode() {
    return TasksJNI.RemoveLighting_getColorMode(swigCPtr, this);
  }

  /**
   *  Internal blur. Should be in range [0, 4]. Default: 1.5
   */
  public void setInternalBlur(double value) {
    TasksJNI.RemoveLighting_setInternalBlur(swigCPtr, this, value);
  }

  /**
   *  Internal blur. Should be in range [0, 4]. Default: 1.5
   */
  public double getInternalBlur() {
    return TasksJNI.RemoveLighting_getInternalBlur(swigCPtr, this);
  }

  /**
   *  Mesh normals noise suppression strength. Should be in range [0, 4]. Default: 1.0
   */
  public void setMeshNoiseSuppression(double value) {
    TasksJNI.RemoveLighting_setMeshNoiseSuppression(swigCPtr, this, value);
  }

  /**
   *  Mesh normals noise suppression strength. Should be in range [0, 4]. Default: 1.0
   */
  public double getMeshNoiseSuppression() {
    return TasksJNI.RemoveLighting_getMeshNoiseSuppression(swigCPtr, this);
  }

}
