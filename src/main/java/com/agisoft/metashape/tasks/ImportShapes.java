/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape.tasks;

import com.agisoft.metashape.*;

/**
 * Task class containing processing parameters.
 */
public class ImportShapes extends Task {
  private transient long swigCPtr;

  protected ImportShapes(long cPtr, boolean cMemoryOwn) {
    super(TasksJNI.ImportShapes_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ImportShapes obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        TasksJNI.delete_ImportShapes(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ImportShapes() {
    this(TasksJNI.new_ImportShapes(), true);
  }

  /**
   *  Boundary type to be applied to imported shapes. Default: Shape.BoundaryType.NoBoundary
   */
  public void setBoundaryType(Shape.BoundaryType value) {
    TasksJNI.ImportShapes_setBoundaryType(swigCPtr, this, value.ordinal());
  }

  /**
   *  Boundary type to be applied to imported shapes. Default: Shape.BoundaryType.NoBoundary
   */
  public Shape.BoundaryType getBoundaryType() {
    return Shape.BoundaryType.class.getEnumConstants()[TasksJNI.ImportShapes_getBoundaryType(swigCPtr, this)];
  }

  /**
   *  Column order in csv format (n - label, x/y/z - coordinates, d - description, [] - group of multiple values, | - column separator within group).
   */
  public void setColumns(String value) {
    TasksJNI.ImportShapes_setColumns(swigCPtr, this, value);
  }

  /**
   *  Column order in csv format (n - label, x/y/z - coordinates, d - description, [] - group of multiple values, | - column separator within group).
   */
  public String getColumns() {
    return TasksJNI.ImportShapes_getColumns(swigCPtr, this);
  }

  /**
   *  Reference data coordinate system (csv format only).
   */
  public void setCRS(CoordinateSystem value) {
    TasksJNI.ImportShapes_setCRS(swigCPtr, this, CoordinateSystem.getCPtr(value), value);
  }

  /**
   *  Reference data coordinate system (csv format only).
   */
  public CoordinateSystem getCRS() {
    return new CoordinateSystem(TasksJNI.ImportShapes_getCRS(swigCPtr, this), true);
  }

  /**
   *  Column delimiter in csv format.
   */
  public void setDelimiter(String value) {
    TasksJNI.ImportShapes_setDelimiter(swigCPtr, this, value);
  }

  /**
   *  Column delimiter in csv format.
   */
  public String getDelimiter() {
    return TasksJNI.ImportShapes_getDelimiter(swigCPtr, this);
  }

  /**
   *  Shapes format. Default: ShapesFormat.ShapesFormatNone
   */
  public void setFormat(ShapesFormat value) {
    TasksJNI.ImportShapes_setFormat(swigCPtr, this, value.ordinal());
  }

  /**
   *  Shapes format. Default: ShapesFormat.ShapesFormatNone
   */
  public ShapesFormat getFormat() {
    return ShapesFormat.class.getEnumConstants()[TasksJNI.ImportShapes_getFormat(swigCPtr, this)];
  }

  /**
   *  Combine consequitive delimiters in csv format. Default: false
   */
  public void setGroupDelimiters(boolean value) {
    TasksJNI.ImportShapes_setGroupDelimiters(swigCPtr, this, value);
  }

  /**
   *  Combine consequitive delimiters in csv format. Default: false
   */
  public boolean getGroupDelimiters() {
    return TasksJNI.ImportShapes_getGroupDelimiters(swigCPtr, this);
  }

  /**
   *  Path to shape file.
   */
  public void setPath(String value) {
    TasksJNI.ImportShapes_setPath(swigCPtr, this, value);
  }

  /**
   *  Path to shape file.
   */
  public String getPath() {
    return TasksJNI.ImportShapes_getPath(swigCPtr, this);
  }

  /**
   *  Replace current shapes with new data. Default: false
   */
  public void setReplace(boolean value) {
    TasksJNI.ImportShapes_setReplace(swigCPtr, this, value);
  }

  /**
   *  Replace current shapes with new data. Default: false
   */
  public boolean getReplace() {
    return TasksJNI.ImportShapes_getReplace(swigCPtr, this);
  }

  /**
   *  Number of rows to skip in (csv format only). Default: 0
   */
  public void setSkipRows(int value) {
    TasksJNI.ImportShapes_setSkipRows(swigCPtr, this, value);
  }

  /**
   *  Number of rows to skip in (csv format only). Default: 0
   */
  public int getSkipRows() {
    return TasksJNI.ImportShapes_getSkipRows(swigCPtr, this);
  }

}
