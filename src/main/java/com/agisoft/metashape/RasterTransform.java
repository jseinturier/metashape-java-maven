/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.agisoft.metashape;

import java.lang.AutoCloseable;
import java.util.Optional;
import java.util.Map;

/**
 * Raster transform definition.
 */
public class RasterTransform implements AutoCloseable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RasterTransform(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RasterTransform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MetashapeJNI.delete_RasterTransform(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  @Override
  public void close() {
    delete();
  }

  public RasterTransform() {
    this(MetashapeJNI.new_RasterTransform__SWIG_0(), true);
  }

  public RasterTransform(RasterTransform raster_transform) {
    this(MetashapeJNI.new_RasterTransform__SWIG_1(RasterTransform.getCPtr(raster_transform), raster_transform), true);
  }

  /**
   *  Enable flag.
   */
  public void setEnabled(boolean on) {
    MetashapeJNI.RasterTransform_setEnabled(swigCPtr, this, on);
  }

  /**
   *  Enable flag.
   */
  public boolean isEnabled() {
    return MetashapeJNI.RasterTransform_isEnabled(swigCPtr, this);
  }

  public void setFromulas(String[] formulas) {
    MetashapeJNI.RasterTransform_setFromulas(swigCPtr, this, formulas);
  }

  public String[] getFormulas() { return MetashapeJNI.RasterTransform_getFormulas(swigCPtr, this); }

  public void setMinValue(double value) {
    MetashapeJNI.RasterTransform_setMinValue(swigCPtr, this, value);
  }

  public double getMinValue() {
    return MetashapeJNI.RasterTransform_getMinValue(swigCPtr, this);
  }

  public void setMaxValue(double value) {
    MetashapeJNI.RasterTransform_setMaxValue(swigCPtr, this, value);
  }

  public double getMaxValue() {
    return MetashapeJNI.RasterTransform_getMaxValue(swigCPtr, this);
  }

  /**
   *  Interpolation enable flag.
   */
  public void setInterpolated(boolean on) {
    MetashapeJNI.RasterTransform_setInterpolated(swigCPtr, this, on);
  }

  /**
   *  Interpolation enable flag.
   */
  public boolean isInterpolated() {
    return MetashapeJNI.RasterTransform_isInterpolated(swigCPtr, this);
  }

  /**
   *  Color palette.
   */
  public void setPalette(Palette palette) {
    MetashapeJNI.RasterTransform_setPalette(swigCPtr, this, Palette.getCPtr(palette), palette);
  }

  /**
   *  Color palette.
   */
  public Palette getPalette() {
    return new Palette(MetashapeJNI.RasterTransform_getPalette(swigCPtr, this), true);
  }

}
